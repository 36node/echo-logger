{
  "item": [
    {
      "id": "f6795bee-4c21-4c01-926d-5ccee644d639",
      "name": "park",
      "item": [
        {
          "id": "d312ff14-0bae-4571-8c0f-81d37a06842d",
          "response": [
            {
              "id": "ffde5cc7-9610-4d46-af69-175c67b6af98",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_201",
              "originalRequest": {
                "url": {
                  "path": ["parks"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 201,
              "status": "The Park created"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a85a8cbf-7b9f-4fb6-b0d8-2fe419c6c6c2",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 201\", function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"address\":{\"type\":\"string\"},\"appearance\":{\"type\":\"string\"},\"software\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["parks"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "Create a park",
          "description": "Create a park"
        },
        {
          "id": "fa10428e-50fa-43ff-b58f-303654f9bfa3",
          "response": [
            {
              "id": "4c2bccbd-7c8a-40f0-8ff0-07703281e31a",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                },
                {
                  "key": "X-Total-Count",
                  "value": "unset"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["parks"],
                  "host": "{{baseUrl}}",
                  "query": [
                    {
                      "key": "_limit",
                      "value": ""
                    },
                    {
                      "key": "_offset",
                      "value": ""
                    },
                    {
                      "key": "_sort",
                      "value": ""
                    },
                    {
                      "key": "_select",
                      "value": ""
                    },
                    {
                      "key": "name_like",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 200,
              "status": "A paged array of parks"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0d606b82-dd45-492f-98b8-474d2bcb2b6e",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"type\":\"array\",\"items\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"address\":{\"type\":\"string\"},\"appearance\":{\"type\":\"string\"},\"software\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}},\"headers\":{\"type\":\"object\",\"required\":[\"X-Total-Count\"],\"properties\":{\"X-Total-Count\":{\"type\":\"integer\"}}}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["parks"],
              "host": "{{baseUrl}}",
              "query": [
                {
                  "key": "_limit",
                  "value": ""
                },
                {
                  "key": "_offset",
                  "value": ""
                },
                {
                  "key": "_sort",
                  "value": ""
                },
                {
                  "key": "_select",
                  "value": ""
                },
                {
                  "key": "name_like",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "List all parks",
          "description": "List all parks"
        },
        {
          "id": "e11da3f8-9bab-4aa2-8e19-e1f9e296f08c",
          "response": [
            {
              "id": "42c7d11e-a7b4-45f9-a12e-b1c7ecc05e51",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["parks/:parkId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "parkId",
                      "type": "string",
                      "value": "{{parkId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 200,
              "status": "Expected response to a valid request"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ee082d67-2635-4d83-b59d-81758789904f",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"address\":{\"type\":\"string\"},\"appearance\":{\"type\":\"string\"},\"software\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["parks/:parkId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "parkId",
                  "type": "string",
                  "value": "{{parkId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "Find park by id",
          "description": "Find park by id"
        },
        {
          "id": "d8724a81-0b23-4f04-8df3-3b537a38c38a",
          "response": [
            {
              "id": "2d98fff5-78f4-4695-953e-db2879aad583",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["parks/:parkId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "parkId",
                      "type": "string",
                      "value": "{{parkId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"{{name}}\",\n  \"address\": \"{{address}}\",\n  \"appearance\": \"{{appearance}}\",\n  \"software\": \"{{software}}\"\n}"
                }
              },
              "code": 200,
              "status": "The park"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bc83ac35-ffa6-49a5-b633-86996f97f114",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"address\":{\"type\":\"string\"},\"appearance\":{\"type\":\"string\"},\"software\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["parks/:parkId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "parkId",
                  "type": "string",
                  "value": "{{parkId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"{{name}}\",\n  \"address\": \"{{address}}\",\n  \"appearance\": \"{{appearance}}\",\n  \"software\": \"{{software}}\"\n}"
            }
          },
          "name": "Update park",
          "description": "Update park"
        },
        {
          "id": "d64965c5-c086-4729-84b8-723d80a646be",
          "response": [
            {
              "id": "103f1e69-b0bc-4a58-8a6e-c84ba7df536e",
              "header": [],
              "cookie": [],
              "name": "Response_204",
              "originalRequest": {
                "url": {
                  "path": ["parks/:parkId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "parkId",
                      "type": "string",
                      "value": "{{parkId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 204,
              "status": "park deleted"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4b5f0eb3-9306-42aa-a11a-2f7858502bbe",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 204\", function () {",
                  "  pm.response.to.have.status(204);",
                  "});",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["parks/:parkId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "parkId",
                  "type": "string",
                  "value": "{{parkId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "deletePark",
          "description": "deletePark"
        }
      ],
      "event": []
    },
    {
      "id": "78b55676-ffa7-477e-8850-a634060328ed",
      "name": "draft",
      "item": [
        {
          "id": "33cb9632-3100-4dd9-97ef-79a1d334cee8",
          "response": [
            {
              "id": "c1b971ed-f3ae-4a84-a21f-79634325c24c",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_201",
              "originalRequest": {
                "url": {
                  "path": ["drafts"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 201,
              "status": "The draft created"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "55415ee8-0db8-4e13-947b-98182bd8b650",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 201\", function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"resource\":{\"type\":\"string\"},\"type\":{\"type\":\"string\",\"enum\":[\"VEHICLE\",\"REPAIR\",\"MAINTAIN\"]},\"content\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["drafts"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "Create a draft",
          "description": "Create a draft"
        },
        {
          "id": "9b4c1be7-b467-45fb-bd07-736e964ba430",
          "response": [
            {
              "id": "81537000-82c9-4a65-9ba5-6b1cdd27c237",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                },
                {
                  "key": "X-Total-Count",
                  "value": "unset"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["drafts"],
                  "host": "{{baseUrl}}",
                  "query": [
                    {
                      "key": "_limit",
                      "value": ""
                    },
                    {
                      "key": "_offset",
                      "value": ""
                    },
                    {
                      "key": "_sort",
                      "value": ""
                    },
                    {
                      "key": "_select",
                      "value": ""
                    },
                    {
                      "key": "type",
                      "value": ""
                    },
                    {
                      "key": "ns_like",
                      "value": ""
                    },
                    {
                      "key": "createBy",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 200,
              "status": "A paged array of drafts"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2ccf8aa4-520e-4818-8fb0-96e0d536e7f8",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"type\":\"array\",\"items\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"resource\":{\"type\":\"string\"},\"type\":{\"type\":\"string\",\"enum\":[\"VEHICLE\",\"REPAIR\",\"MAINTAIN\"]},\"content\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}},\"headers\":{\"type\":\"object\",\"required\":[\"X-Total-Count\"],\"properties\":{\"X-Total-Count\":{\"type\":\"integer\"}}}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["drafts"],
              "host": "{{baseUrl}}",
              "query": [
                {
                  "key": "_limit",
                  "value": ""
                },
                {
                  "key": "_offset",
                  "value": ""
                },
                {
                  "key": "_sort",
                  "value": ""
                },
                {
                  "key": "_select",
                  "value": ""
                },
                {
                  "key": "type",
                  "value": ""
                },
                {
                  "key": "ns_like",
                  "value": ""
                },
                {
                  "key": "createBy",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "List all drafts",
          "description": "List all drafts"
        },
        {
          "id": "ac4c75a4-fbf3-4a36-8478-8326bd0134bf",
          "response": [
            {
              "id": "878bbefd-3449-4d3e-b637-6762332d2272",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["drafts/:draftId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "draftId",
                      "type": "string",
                      "value": "{{draftId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 200,
              "status": "Expected response to a valid request"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "16ffce0c-007e-4b89-a29e-f372cdf878b6",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"resource\":{\"type\":\"string\"},\"type\":{\"type\":\"string\",\"enum\":[\"VEHICLE\",\"REPAIR\",\"MAINTAIN\"]},\"content\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["drafts/:draftId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "draftId",
                  "type": "string",
                  "value": "{{draftId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "Find draft by id",
          "description": "Find draft by id"
        },
        {
          "id": "adc51cd7-b855-415d-8f51-07e98d8d1401",
          "response": [
            {
              "id": "b628c508-9316-4413-ac5b-a7e678ebf673",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["drafts/:draftId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "draftId",
                      "type": "string",
                      "value": "{{draftId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"resource\": \"{{resource}}\",\n  \"type\": \"{{type}}\",\n  \"content\": \"{{content}}\"\n}"
                }
              },
              "code": 200,
              "status": "The draft"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6c95ecd1-fd11-42c4-b058-0e9db5b8a1b7",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"resource\":{\"type\":\"string\"},\"type\":{\"type\":\"string\",\"enum\":[\"VEHICLE\",\"REPAIR\",\"MAINTAIN\"]},\"content\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["drafts/:draftId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "draftId",
                  "type": "string",
                  "value": "{{draftId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"resource\": \"{{resource}}\",\n  \"type\": \"{{type}}\",\n  \"content\": \"{{content}}\"\n}"
            }
          },
          "name": "Update draft",
          "description": "Update draft"
        },
        {
          "id": "fe5caf21-89d2-4e42-b67d-38652e807bb8",
          "response": [
            {
              "id": "c33d5818-f6d7-42d2-ba13-feb9da54e4c9",
              "header": [],
              "cookie": [],
              "name": "Response_204",
              "originalRequest": {
                "url": {
                  "path": ["drafts/:draftId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "draftId",
                      "type": "string",
                      "value": "{{draftId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 204,
              "status": "draft deleted"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b9832267-656f-4e4a-9284-bcec0952a03d",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 204\", function () {",
                  "  pm.response.to.have.status(204);",
                  "});",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["drafts/:draftId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "draftId",
                  "type": "string",
                  "value": "{{draftId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "deleteDraft",
          "description": "deleteDraft"
        }
      ],
      "event": []
    },
    {
      "id": "defc6b00-0087-4f8e-bccc-169fe1abc1db",
      "name": "vehicle",
      "item": [
        {
          "id": "848f5137-fdae-4c21-aa63-a3a0ef4b8b4b",
          "response": [
            {
              "id": "f49b34c3-a9f5-4705-beeb-c7de075ae2f9",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_201",
              "originalRequest": {
                "url": {
                  "path": ["vehicles"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"terminal\": \"{{terminal}}\",\n  \"park\": \"{{park}}\",\n  \"purchaseAt\": \"{{purchaseAt}}\",\n  \"plateAt\": \"{{plateAt}}\",\n  \"operateAt\": \"{{operateAt}}\",\n  \"retireAt\": \"{{retireAt}}\",\n  \"license\": \"{{license}}\",\n  \"brands\": \"{{brands}}\",\n  \"plate\": \"{{plate}}\",\n  \"vin\": \"{{vin}}\",\n  \"jobNum\": \"{{jobNum}}\",\n  \"num\": \"{{num}}\",\n  \"catl\": \"{{catl}}\",\n  \"batteryPN\": \"{{batteryPN}}\",\n  \"batteryNum\": \"{{batteryNum}}\",\n  \"batteryPropRight\": \"{{batteryPropRight}}\",\n  \"power\": \"{{power}}\",\n  \"bmuHardware\": \"{{bmuHardware}}\",\n  \"bmuSoftware\": \"{{bmuSoftware}}\",\n  \"cscHardware\": \"{{cscHardware}}\",\n  \"cscSoftware\": \"{{cscSoftware}}\",\n  \"rdb\": \"{{rdb}}\",\n  \"remark\": \"{{remark}}\",\n  \"softwarePic\": \"{{softwarePic}}\",\n  \"frontPic\": \"{{frontPic}}\",\n  \"nameplatePic\": \"{{nameplatePic}}\",\n  \"meterPic\": \"{{meterPic}}\",\n  \"batteryPic\": \"{{batteryPic}}\",\n  \"otherPic\": \"{{otherPic}}\"\n}"
                }
              },
              "code": 201,
              "status": "The Vehicle created"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ebdcccdd-8af5-42cb-985e-0b46a77a67e4",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 201\", function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"status\":{\"type\":\"string\",\"enum\":[\"CREATING\",\"FILLING\",\"PENDING\",\"PASSED\"]},\"rejected\":{\"type\":\"boolean\"},\"scrapped\":{\"type\":\"boolean\"},\"crm\":{\"type\":\"string\"},\"terminal\":{\"type\":\"string\"},\"park\":{\"type\":\"string\"},\"purchaseAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"plateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"operateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"retireAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"license\":{\"type\":\"string\"},\"brands\":{\"type\":\"string\"},\"plate\":{\"type\":\"string\"},\"vin\":{\"type\":\"string\"},\"jobNum\":{\"type\":\"string\"},\"num\":{\"type\":\"string\"},\"catl\":{\"type\":\"string\"},\"batteryPN\":{\"type\":\"string\"},\"batteryNum\":{\"type\":\"string\"},\"batteryPropRight\":{\"type\":\"string\"},\"power\":{\"type\":\"string\"},\"bmuHardware\":{\"type\":\"string\"},\"bmuSoftware\":{\"type\":\"string\"},\"cscHardware\":{\"type\":\"string\"},\"cscSoftware\":{\"type\":\"string\"},\"rdb\":{\"type\":\"string\"},\"remark\":{\"type\":\"string\"},\"softwarePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"otherPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["vehicles"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"terminal\": \"{{terminal}}\",\n  \"park\": \"{{park}}\",\n  \"purchaseAt\": \"{{purchaseAt}}\",\n  \"plateAt\": \"{{plateAt}}\",\n  \"operateAt\": \"{{operateAt}}\",\n  \"retireAt\": \"{{retireAt}}\",\n  \"license\": \"{{license}}\",\n  \"brands\": \"{{brands}}\",\n  \"plate\": \"{{plate}}\",\n  \"vin\": \"{{vin}}\",\n  \"jobNum\": \"{{jobNum}}\",\n  \"num\": \"{{num}}\",\n  \"catl\": \"{{catl}}\",\n  \"batteryPN\": \"{{batteryPN}}\",\n  \"batteryNum\": \"{{batteryNum}}\",\n  \"batteryPropRight\": \"{{batteryPropRight}}\",\n  \"power\": \"{{power}}\",\n  \"bmuHardware\": \"{{bmuHardware}}\",\n  \"bmuSoftware\": \"{{bmuSoftware}}\",\n  \"cscHardware\": \"{{cscHardware}}\",\n  \"cscSoftware\": \"{{cscSoftware}}\",\n  \"rdb\": \"{{rdb}}\",\n  \"remark\": \"{{remark}}\",\n  \"softwarePic\": \"{{softwarePic}}\",\n  \"frontPic\": \"{{frontPic}}\",\n  \"nameplatePic\": \"{{nameplatePic}}\",\n  \"meterPic\": \"{{meterPic}}\",\n  \"batteryPic\": \"{{batteryPic}}\",\n  \"otherPic\": \"{{otherPic}}\"\n}"
            }
          },
          "name": "Create a vehicle",
          "description": "Create a vehicle"
        },
        {
          "id": "ea8d6a99-508a-4525-a90e-8541a65fa301",
          "response": [
            {
              "id": "4567a220-aaa3-4b4f-9a9f-3d524f74069a",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                },
                {
                  "key": "X-Total-Count",
                  "value": "unset"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["vehicles"],
                  "host": "{{baseUrl}}",
                  "query": [
                    {
                      "key": "_limit",
                      "value": ""
                    },
                    {
                      "key": "_offset",
                      "value": ""
                    },
                    {
                      "key": "_sort",
                      "value": ""
                    },
                    {
                      "key": "_select",
                      "value": ""
                    },
                    {
                      "key": "running",
                      "value": ""
                    },
                    {
                      "key": "status",
                      "value": ""
                    },
                    {
                      "key": "createAt_lte",
                      "value": ""
                    },
                    {
                      "key": "plate",
                      "value": ""
                    },
                    {
                      "key": "crm",
                      "value": ""
                    },
                    {
                      "key": "vin",
                      "value": ""
                    },
                    {
                      "key": "brands",
                      "value": ""
                    },
                    {
                      "key": "terminal",
                      "value": ""
                    },
                    {
                      "key": "park",
                      "value": ""
                    },
                    {
                      "key": "status",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 200,
              "status": "A paged array of vehicles"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "768dd25e-ba10-4bf7-a5f2-46743db9ab82",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"type\":\"array\",\"items\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"status\":{\"type\":\"string\",\"enum\":[\"CREATING\",\"FILLING\",\"PENDING\",\"PASSED\"]},\"rejected\":{\"type\":\"boolean\"},\"scrapped\":{\"type\":\"boolean\"},\"crm\":{\"type\":\"string\"},\"terminal\":{\"type\":\"string\"},\"park\":{\"type\":\"string\"},\"purchaseAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"plateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"operateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"retireAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"license\":{\"type\":\"string\"},\"brands\":{\"type\":\"string\"},\"plate\":{\"type\":\"string\"},\"vin\":{\"type\":\"string\"},\"jobNum\":{\"type\":\"string\"},\"num\":{\"type\":\"string\"},\"catl\":{\"type\":\"string\"},\"batteryPN\":{\"type\":\"string\"},\"batteryNum\":{\"type\":\"string\"},\"batteryPropRight\":{\"type\":\"string\"},\"power\":{\"type\":\"string\"},\"bmuHardware\":{\"type\":\"string\"},\"bmuSoftware\":{\"type\":\"string\"},\"cscHardware\":{\"type\":\"string\"},\"cscSoftware\":{\"type\":\"string\"},\"rdb\":{\"type\":\"string\"},\"remark\":{\"type\":\"string\"},\"softwarePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"otherPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}},\"headers\":{\"type\":\"object\",\"required\":[\"X-Total-Count\"],\"properties\":{\"X-Total-Count\":{\"type\":\"integer\"}}}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["vehicles"],
              "host": "{{baseUrl}}",
              "query": [
                {
                  "key": "_limit",
                  "value": ""
                },
                {
                  "key": "_offset",
                  "value": ""
                },
                {
                  "key": "_sort",
                  "value": ""
                },
                {
                  "key": "_select",
                  "value": ""
                },
                {
                  "key": "running",
                  "value": ""
                },
                {
                  "key": "status",
                  "value": ""
                },
                {
                  "key": "createAt_lte",
                  "value": ""
                },
                {
                  "key": "plate",
                  "value": ""
                },
                {
                  "key": "crm",
                  "value": ""
                },
                {
                  "key": "vin",
                  "value": ""
                },
                {
                  "key": "brands",
                  "value": ""
                },
                {
                  "key": "terminal",
                  "value": ""
                },
                {
                  "key": "park",
                  "value": ""
                },
                {
                  "key": "status",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "List all vehicles",
          "description": "List all vehicles"
        },
        {
          "id": "ca497064-b62c-4166-a402-068af65b9578",
          "response": [
            {
              "id": "9a7be6c7-a119-4f98-89e1-3050673b44f6",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["vehicles/:vehicleId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "vehicleId",
                      "type": "string",
                      "value": "{{vehicleId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 200,
              "status": "Expected response to a valid request"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e8e5eba1-8ab2-42e3-8a1a-8ff69ab6db7d",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"status\":{\"type\":\"string\",\"enum\":[\"CREATING\",\"FILLING\",\"PENDING\",\"PASSED\"]},\"rejected\":{\"type\":\"boolean\"},\"scrapped\":{\"type\":\"boolean\"},\"crm\":{\"type\":\"string\"},\"terminal\":{\"type\":\"string\"},\"park\":{\"type\":\"string\"},\"purchaseAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"plateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"operateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"retireAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"license\":{\"type\":\"string\"},\"brands\":{\"type\":\"string\"},\"plate\":{\"type\":\"string\"},\"vin\":{\"type\":\"string\"},\"jobNum\":{\"type\":\"string\"},\"num\":{\"type\":\"string\"},\"catl\":{\"type\":\"string\"},\"batteryPN\":{\"type\":\"string\"},\"batteryNum\":{\"type\":\"string\"},\"batteryPropRight\":{\"type\":\"string\"},\"power\":{\"type\":\"string\"},\"bmuHardware\":{\"type\":\"string\"},\"bmuSoftware\":{\"type\":\"string\"},\"cscHardware\":{\"type\":\"string\"},\"cscSoftware\":{\"type\":\"string\"},\"rdb\":{\"type\":\"string\"},\"remark\":{\"type\":\"string\"},\"softwarePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"otherPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["vehicles/:vehicleId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "vehicleId",
                  "type": "string",
                  "value": "{{vehicleId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "Find vehicle by id",
          "description": "Find vehicle by id"
        },
        {
          "id": "dc286ca9-c950-486b-b6f6-90b0b2589f1e",
          "response": [
            {
              "id": "d683c98e-7833-4f7e-8f08-8a73ab652ab3",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["vehicles/:vehicleId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "vehicleId",
                      "type": "string",
                      "value": "{{vehicleId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ticket\": \"{{ticket}}\",\n  \"status\": \"{{status}}\",\n  \"rejected\": \"{{rejected}}\",\n  \"scrapped\": \"{{scrapped}}\",\n  \"crm\": \"{{crm}}\",\n  \"terminal\": \"{{terminal}}\",\n  \"park\": \"{{park}}\",\n  \"purchaseAt\": \"{{purchaseAt}}\",\n  \"plateAt\": \"{{plateAt}}\",\n  \"operateAt\": \"{{operateAt}}\",\n  \"retireAt\": \"{{retireAt}}\",\n  \"license\": \"{{license}}\",\n  \"brands\": \"{{brands}}\",\n  \"plate\": \"{{plate}}\",\n  \"vin\": \"{{vin}}\",\n  \"jobNum\": \"{{jobNum}}\",\n  \"num\": \"{{num}}\",\n  \"catl\": \"{{catl}}\",\n  \"batteryPN\": \"{{batteryPN}}\",\n  \"batteryNum\": \"{{batteryNum}}\",\n  \"batteryPropRight\": \"{{batteryPropRight}}\",\n  \"power\": \"{{power}}\",\n  \"bmuHardware\": \"{{bmuHardware}}\",\n  \"bmuSoftware\": \"{{bmuSoftware}}\",\n  \"cscHardware\": \"{{cscHardware}}\",\n  \"cscSoftware\": \"{{cscSoftware}}\",\n  \"rdb\": \"{{rdb}}\",\n  \"remark\": \"{{remark}}\",\n  \"softwarePic\": \"{{softwarePic}}\",\n  \"frontPic\": \"{{frontPic}}\",\n  \"nameplatePic\": \"{{nameplatePic}}\",\n  \"meterPic\": \"{{meterPic}}\",\n  \"batteryPic\": \"{{batteryPic}}\",\n  \"otherPic\": \"{{otherPic}}\"\n}"
                }
              },
              "code": 200,
              "status": "The vehicle"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f58e6cb7-78a6-4d4d-ade0-a112bd91010f",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"status\":{\"type\":\"string\",\"enum\":[\"CREATING\",\"FILLING\",\"PENDING\",\"PASSED\"]},\"rejected\":{\"type\":\"boolean\"},\"scrapped\":{\"type\":\"boolean\"},\"crm\":{\"type\":\"string\"},\"terminal\":{\"type\":\"string\"},\"park\":{\"type\":\"string\"},\"purchaseAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"plateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"operateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"retireAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"license\":{\"type\":\"string\"},\"brands\":{\"type\":\"string\"},\"plate\":{\"type\":\"string\"},\"vin\":{\"type\":\"string\"},\"jobNum\":{\"type\":\"string\"},\"num\":{\"type\":\"string\"},\"catl\":{\"type\":\"string\"},\"batteryPN\":{\"type\":\"string\"},\"batteryNum\":{\"type\":\"string\"},\"batteryPropRight\":{\"type\":\"string\"},\"power\":{\"type\":\"string\"},\"bmuHardware\":{\"type\":\"string\"},\"bmuSoftware\":{\"type\":\"string\"},\"cscHardware\":{\"type\":\"string\"},\"cscSoftware\":{\"type\":\"string\"},\"rdb\":{\"type\":\"string\"},\"remark\":{\"type\":\"string\"},\"softwarePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"otherPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["vehicles/:vehicleId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "vehicleId",
                  "type": "string",
                  "value": "{{vehicleId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ticket\": \"{{ticket}}\",\n  \"status\": \"{{status}}\",\n  \"rejected\": \"{{rejected}}\",\n  \"scrapped\": \"{{scrapped}}\",\n  \"crm\": \"{{crm}}\",\n  \"terminal\": \"{{terminal}}\",\n  \"park\": \"{{park}}\",\n  \"purchaseAt\": \"{{purchaseAt}}\",\n  \"plateAt\": \"{{plateAt}}\",\n  \"operateAt\": \"{{operateAt}}\",\n  \"retireAt\": \"{{retireAt}}\",\n  \"license\": \"{{license}}\",\n  \"brands\": \"{{brands}}\",\n  \"plate\": \"{{plate}}\",\n  \"vin\": \"{{vin}}\",\n  \"jobNum\": \"{{jobNum}}\",\n  \"num\": \"{{num}}\",\n  \"catl\": \"{{catl}}\",\n  \"batteryPN\": \"{{batteryPN}}\",\n  \"batteryNum\": \"{{batteryNum}}\",\n  \"batteryPropRight\": \"{{batteryPropRight}}\",\n  \"power\": \"{{power}}\",\n  \"bmuHardware\": \"{{bmuHardware}}\",\n  \"bmuSoftware\": \"{{bmuSoftware}}\",\n  \"cscHardware\": \"{{cscHardware}}\",\n  \"cscSoftware\": \"{{cscSoftware}}\",\n  \"rdb\": \"{{rdb}}\",\n  \"remark\": \"{{remark}}\",\n  \"softwarePic\": \"{{softwarePic}}\",\n  \"frontPic\": \"{{frontPic}}\",\n  \"nameplatePic\": \"{{nameplatePic}}\",\n  \"meterPic\": \"{{meterPic}}\",\n  \"batteryPic\": \"{{batteryPic}}\",\n  \"otherPic\": \"{{otherPic}}\"\n}"
            }
          },
          "name": "Update vehicle",
          "description": "Update vehicle"
        },
        {
          "id": "9c972a87-6f0e-40f1-92d5-42cb92aecb3e",
          "response": [
            {
              "id": "e7dadce7-3884-496b-928e-c9041c7987a6",
              "header": [],
              "cookie": [],
              "name": "Response_204",
              "originalRequest": {
                "url": {
                  "path": ["vehicles/:vehicleId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "vehicleId",
                      "type": "string",
                      "value": "{{vehicleId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 204,
              "status": "vehicle deleted"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d06358d0-ec39-4814-8acf-f2d4ab36227f",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 204\", function () {",
                  "  pm.response.to.have.status(204);",
                  "});",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["vehicles/:vehicleId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "vehicleId",
                  "type": "string",
                  "value": "{{vehicleId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "deleteVehicle",
          "description": "deleteVehicle"
        },
        {
          "id": "79bc2f80-1b50-48d9-912d-a7659a982a53",
          "response": [
            {
              "id": "014bc812-54a3-4db1-b6b5-091544d73da9",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                },
                {
                  "key": "X-Total-Count",
                  "value": "unset"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["vehicles/:vehicleId/alerts"],
                  "host": "{{baseUrl}}",
                  "query": [
                    {
                      "key": "_limit",
                      "value": ""
                    },
                    {
                      "key": "_offset",
                      "value": ""
                    },
                    {
                      "key": "_sort",
                      "value": ""
                    },
                    {
                      "key": "_select",
                      "value": ""
                    },
                    {
                      "key": "level",
                      "value": ""
                    }
                  ],
                  "variable": [
                    {
                      "id": "vehicleId",
                      "type": "string",
                      "value": "{{vehicleId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 200,
              "status": "A paged array of vehicle alerts"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57b8e3e7-6572-4502-8b17-31b40af976ca",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"type\":\"array\",\"items\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"level\":{\"type\":\"integer\",\"format\":\"int32\"},\"code\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"startedAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"count\":{\"type\":\"integer\",\"format\":\"int32\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}},\"headers\":{\"type\":\"object\",\"required\":[\"X-Total-Count\"],\"properties\":{\"X-Total-Count\":{\"type\":\"integer\"}}}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["vehicles/:vehicleId/alerts"],
              "host": "{{baseUrl}}",
              "query": [
                {
                  "key": "_limit",
                  "value": ""
                },
                {
                  "key": "_offset",
                  "value": ""
                },
                {
                  "key": "_sort",
                  "value": ""
                },
                {
                  "key": "_select",
                  "value": ""
                },
                {
                  "key": "level",
                  "value": ""
                }
              ],
              "variable": [
                {
                  "id": "vehicleId",
                  "type": "string",
                  "value": "{{vehicleId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "List all alerts by vehicleId",
          "description": "List all alerts by vehicleId"
        }
      ],
      "event": []
    },
    {
      "id": "7dade441-f469-4f1c-a401-754f23dbedcc",
      "name": "repair",
      "item": [
        {
          "id": "5ef97631-b329-441a-a2aa-b2ac8e4a4b92",
          "response": [
            {
              "id": "d0374f08-5933-46e9-8001-f48b4bf78934",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_201",
              "originalRequest": {
                "url": {
                  "path": ["repairs"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"maintain\": \"{{maintain}}\",\n  \"vehicle\": \"{{vehicle}}\",\n  \"plate\": \"{{plate}}\",\n  \"vin\": \"{{vin}}\",\n  \"address\": \"{{address}}\",\n  \"reporter\": \"{{reporter}}\",\n  \"reporterPhone\": \"{{reporterPhone}}\",\n  \"problem\": \"{{problem}}\"\n}"
                }
              },
              "code": 201,
              "status": "The repair order created"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "77f811ef-6197-4495-b72a-4aa4d103cccf",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 201\", function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"status\":{\"type\":\"string\",\"enum\":[\"CREATING\",\"FILLING\",\"DELIVERED\",\"REPARING\",\"REPARED\",\"PAUSING\",\"PENDING\",\"PASSED\"]},\"rejected\":{\"type\":\"boolean\"},\"crm\":{\"type\":\"string\"},\"vehicle\":{\"type\":\"string\"},\"plate\":{\"type\":\"string\"},\"vin\":{\"type\":\"string\"},\"address\":{\"type\":\"string\"},\"reporter\":{\"type\":\"string\"},\"reporterPhone\":{\"type\":\"string\"},\"problem\":{\"type\":\"string\"},\"assignee\":{\"type\":\"string\"},\"assignAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"closeAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"record\":{\"type\":\"object\",\"required\":[\"signAddress\",\"arrivalAt\",\"mileages\",\"faultCell\",\"workHours\",\"failReason\",\"processMethod\",\"faultAttr\",\"faultMode\",\"livePic\",\"resultDesc\",\"softwarePic\",\"frontPic\",\"nameplatePic\",\"meterPic\",\"batteryPic\",\"workers\"],\"properties\":{\"signAddress\":{\"type\":\"string\"},\"arrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"mileages\":{\"type\":\"string\"},\"routeMap\":{\"type\":\"string\"},\"faultCell\":{\"type\":\"string\"},\"workHours\":{\"type\":\"string\"},\"failReason\":{\"type\":\"string\"},\"processMethod\":{\"type\":\"string\"},\"faultAttr\":{\"type\":\"string\"},\"faultMode\":{\"type\":\"string\"},\"backups\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"itemNo\":{\"type\":\"string\"},\"unitPrice\":{\"type\":\"string\"},\"quantity\":{\"type\":\"number\"},\"free\":{\"type\":\"boolean\"}}}},\"livePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"resultDesc\":{\"type\":\"string\"},\"softwarePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"otherPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"dataFile\":{\"type\":\"string\"},\"otherCost\":{\"type\":\"string\"},\"remark\":{\"type\":\"string\"},\"workers\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"user\":{\"type\":\"string\"},\"mileages\":{\"type\":\"string\"},\"Workload\":{\"type\":\"number\"}}}},\"pauseReason\":{\"type\":\"string\"}}},\"pauseReason\":{\"type\":\"string\"},\"maintain\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["repairs"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"maintain\": \"{{maintain}}\",\n  \"vehicle\": \"{{vehicle}}\",\n  \"plate\": \"{{plate}}\",\n  \"vin\": \"{{vin}}\",\n  \"address\": \"{{address}}\",\n  \"reporter\": \"{{reporter}}\",\n  \"reporterPhone\": \"{{reporterPhone}}\",\n  \"problem\": \"{{problem}}\"\n}"
            }
          },
          "name": "Create a repair order",
          "description": "Create a repair order"
        },
        {
          "id": "bb55ec3b-a28b-4049-b8eb-e4ebe921e383",
          "response": [
            {
              "id": "a766c071-9e5b-4cbe-ac9b-e91724f1d2db",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                },
                {
                  "key": "X-Total-Count",
                  "value": "unset"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["repairs"],
                  "host": "{{baseUrl}}",
                  "query": [
                    {
                      "key": "_limit",
                      "value": ""
                    },
                    {
                      "key": "_offset",
                      "value": ""
                    },
                    {
                      "key": "_sort",
                      "value": ""
                    },
                    {
                      "key": "_select",
                      "value": ""
                    },
                    {
                      "key": "id_like",
                      "value": ""
                    },
                    {
                      "key": "status",
                      "value": ""
                    },
                    {
                      "key": "createAt_gt",
                      "value": ""
                    },
                    {
                      "key": "createAt_lt",
                      "value": ""
                    },
                    {
                      "key": "dispatchWorker_like",
                      "value": ""
                    },
                    {
                      "key": "plate_like",
                      "value": ""
                    },
                    {
                      "key": "crm_like",
                      "value": ""
                    },
                    {
                      "key": "vin_like",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 200,
              "status": "A paged array of repair orders"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "88aafdd9-1c41-495a-acbe-fe906dc4042c",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"type\":\"array\",\"items\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"status\":{\"type\":\"string\",\"enum\":[\"CREATING\",\"FILLING\",\"DELIVERED\",\"REPARING\",\"REPARED\",\"PAUSING\",\"PENDING\",\"PASSED\"]},\"rejected\":{\"type\":\"boolean\"},\"crm\":{\"type\":\"string\"},\"vehicle\":{\"type\":\"string\"},\"plate\":{\"type\":\"string\"},\"vin\":{\"type\":\"string\"},\"address\":{\"type\":\"string\"},\"reporter\":{\"type\":\"string\"},\"reporterPhone\":{\"type\":\"string\"},\"problem\":{\"type\":\"string\"},\"assignee\":{\"type\":\"string\"},\"assignAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"closeAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"record\":{\"type\":\"object\",\"required\":[\"signAddress\",\"arrivalAt\",\"mileages\",\"faultCell\",\"workHours\",\"failReason\",\"processMethod\",\"faultAttr\",\"faultMode\",\"livePic\",\"resultDesc\",\"softwarePic\",\"frontPic\",\"nameplatePic\",\"meterPic\",\"batteryPic\",\"workers\"],\"properties\":{\"signAddress\":{\"type\":\"string\"},\"arrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"mileages\":{\"type\":\"string\"},\"routeMap\":{\"type\":\"string\"},\"faultCell\":{\"type\":\"string\"},\"workHours\":{\"type\":\"string\"},\"failReason\":{\"type\":\"string\"},\"processMethod\":{\"type\":\"string\"},\"faultAttr\":{\"type\":\"string\"},\"faultMode\":{\"type\":\"string\"},\"backups\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"itemNo\":{\"type\":\"string\"},\"unitPrice\":{\"type\":\"string\"},\"quantity\":{\"type\":\"number\"},\"free\":{\"type\":\"boolean\"}}}},\"livePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"resultDesc\":{\"type\":\"string\"},\"softwarePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"otherPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"dataFile\":{\"type\":\"string\"},\"otherCost\":{\"type\":\"string\"},\"remark\":{\"type\":\"string\"},\"workers\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"user\":{\"type\":\"string\"},\"mileages\":{\"type\":\"string\"},\"Workload\":{\"type\":\"number\"}}}},\"pauseReason\":{\"type\":\"string\"}}},\"pauseReason\":{\"type\":\"string\"},\"maintain\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}},\"headers\":{\"type\":\"object\",\"required\":[\"X-Total-Count\"],\"properties\":{\"X-Total-Count\":{\"type\":\"integer\"}}}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["repairs"],
              "host": "{{baseUrl}}",
              "query": [
                {
                  "key": "_limit",
                  "value": ""
                },
                {
                  "key": "_offset",
                  "value": ""
                },
                {
                  "key": "_sort",
                  "value": ""
                },
                {
                  "key": "_select",
                  "value": ""
                },
                {
                  "key": "id_like",
                  "value": ""
                },
                {
                  "key": "status",
                  "value": ""
                },
                {
                  "key": "createAt_gt",
                  "value": ""
                },
                {
                  "key": "createAt_lt",
                  "value": ""
                },
                {
                  "key": "dispatchWorker_like",
                  "value": ""
                },
                {
                  "key": "plate_like",
                  "value": ""
                },
                {
                  "key": "crm_like",
                  "value": ""
                },
                {
                  "key": "vin_like",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "List all repair orders",
          "description": "List all repair orders"
        },
        {
          "id": "d2c8a31b-f44b-4529-a964-f582cdb7d49c",
          "response": [
            {
              "id": "ffe31f69-b348-4868-9c8c-a630c3427f11",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["repairs/:repairId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "repairId",
                      "type": "string",
                      "value": "{{repairId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 200,
              "status": "Expected response to a valid request"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5b2f4e8b-d582-4728-9177-ade4072829bc",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"status\":{\"type\":\"string\",\"enum\":[\"CREATING\",\"FILLING\",\"DELIVERED\",\"REPARING\",\"REPARED\",\"PAUSING\",\"PENDING\",\"PASSED\"]},\"rejected\":{\"type\":\"boolean\"},\"crm\":{\"type\":\"string\"},\"vehicle\":{\"type\":\"string\"},\"plate\":{\"type\":\"string\"},\"vin\":{\"type\":\"string\"},\"address\":{\"type\":\"string\"},\"reporter\":{\"type\":\"string\"},\"reporterPhone\":{\"type\":\"string\"},\"problem\":{\"type\":\"string\"},\"assignee\":{\"type\":\"string\"},\"assignAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"closeAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"record\":{\"type\":\"object\",\"required\":[\"signAddress\",\"arrivalAt\",\"mileages\",\"faultCell\",\"workHours\",\"failReason\",\"processMethod\",\"faultAttr\",\"faultMode\",\"livePic\",\"resultDesc\",\"softwarePic\",\"frontPic\",\"nameplatePic\",\"meterPic\",\"batteryPic\",\"workers\"],\"properties\":{\"signAddress\":{\"type\":\"string\"},\"arrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"mileages\":{\"type\":\"string\"},\"routeMap\":{\"type\":\"string\"},\"faultCell\":{\"type\":\"string\"},\"workHours\":{\"type\":\"string\"},\"failReason\":{\"type\":\"string\"},\"processMethod\":{\"type\":\"string\"},\"faultAttr\":{\"type\":\"string\"},\"faultMode\":{\"type\":\"string\"},\"backups\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"itemNo\":{\"type\":\"string\"},\"unitPrice\":{\"type\":\"string\"},\"quantity\":{\"type\":\"number\"},\"free\":{\"type\":\"boolean\"}}}},\"livePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"resultDesc\":{\"type\":\"string\"},\"softwarePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"otherPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"dataFile\":{\"type\":\"string\"},\"otherCost\":{\"type\":\"string\"},\"remark\":{\"type\":\"string\"},\"workers\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"user\":{\"type\":\"string\"},\"mileages\":{\"type\":\"string\"},\"Workload\":{\"type\":\"number\"}}}},\"pauseReason\":{\"type\":\"string\"}}},\"pauseReason\":{\"type\":\"string\"},\"maintain\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["repairs/:repairId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "repairId",
                  "type": "string",
                  "value": "{{repairId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "Find repair order by id",
          "description": "Find repair order by id"
        },
        {
          "id": "e6ae40c6-abe1-40c8-965b-b2479faf3bc0",
          "response": [
            {
              "id": "bf8ce002-d079-4a7b-9198-9fb94f83d462",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["repairs/:repairId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "repairId",
                      "type": "string",
                      "value": "{{repairId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ticket\": \"{{ticket}}\",\n  \"status\": \"{{status}}\",\n  \"rejected\": \"{{rejected}}\",\n  \"crm\": \"{{crm}}\",\n  \"vehicle\": \"{{vehicle}}\",\n  \"plate\": \"{{plate}}\",\n  \"vin\": \"{{vin}}\",\n  \"address\": \"{{address}}\",\n  \"reporter\": \"{{reporter}}\",\n  \"reporterPhone\": \"{{reporterPhone}}\",\n  \"problem\": \"{{problem}}\",\n  \"assignee\": \"{{assignee}}\",\n  \"assignAt\": \"{{assignAt}}\",\n  \"closeAt\": \"{{closeAt}}\",\n  \"record\": \"{{record}}\",\n  \"pauseReason\": \"{{pauseReason}}\",\n  \"maintain\": \"{{maintain}}\"\n}"
                }
              },
              "code": 200,
              "status": "The repair order"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "60f293ae-c38a-4dd3-8dca-9303c5d8c483",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"status\":{\"type\":\"string\",\"enum\":[\"CREATING\",\"FILLING\",\"DELIVERED\",\"REPARING\",\"REPARED\",\"PAUSING\",\"PENDING\",\"PASSED\"]},\"rejected\":{\"type\":\"boolean\"},\"crm\":{\"type\":\"string\"},\"vehicle\":{\"type\":\"string\"},\"plate\":{\"type\":\"string\"},\"vin\":{\"type\":\"string\"},\"address\":{\"type\":\"string\"},\"reporter\":{\"type\":\"string\"},\"reporterPhone\":{\"type\":\"string\"},\"problem\":{\"type\":\"string\"},\"assignee\":{\"type\":\"string\"},\"assignAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"closeAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"record\":{\"type\":\"object\",\"required\":[\"signAddress\",\"arrivalAt\",\"mileages\",\"faultCell\",\"workHours\",\"failReason\",\"processMethod\",\"faultAttr\",\"faultMode\",\"livePic\",\"resultDesc\",\"softwarePic\",\"frontPic\",\"nameplatePic\",\"meterPic\",\"batteryPic\",\"workers\"],\"properties\":{\"signAddress\":{\"type\":\"string\"},\"arrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"mileages\":{\"type\":\"string\"},\"routeMap\":{\"type\":\"string\"},\"faultCell\":{\"type\":\"string\"},\"workHours\":{\"type\":\"string\"},\"failReason\":{\"type\":\"string\"},\"processMethod\":{\"type\":\"string\"},\"faultAttr\":{\"type\":\"string\"},\"faultMode\":{\"type\":\"string\"},\"backups\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"itemNo\":{\"type\":\"string\"},\"unitPrice\":{\"type\":\"string\"},\"quantity\":{\"type\":\"number\"},\"free\":{\"type\":\"boolean\"}}}},\"livePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"resultDesc\":{\"type\":\"string\"},\"softwarePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"otherPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"dataFile\":{\"type\":\"string\"},\"otherCost\":{\"type\":\"string\"},\"remark\":{\"type\":\"string\"},\"workers\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"user\":{\"type\":\"string\"},\"mileages\":{\"type\":\"string\"},\"Workload\":{\"type\":\"number\"}}}},\"pauseReason\":{\"type\":\"string\"}}},\"pauseReason\":{\"type\":\"string\"},\"maintain\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["repairs/:repairId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "repairId",
                  "type": "string",
                  "value": "{{repairId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ticket\": \"{{ticket}}\",\n  \"status\": \"{{status}}\",\n  \"rejected\": \"{{rejected}}\",\n  \"crm\": \"{{crm}}\",\n  \"vehicle\": \"{{vehicle}}\",\n  \"plate\": \"{{plate}}\",\n  \"vin\": \"{{vin}}\",\n  \"address\": \"{{address}}\",\n  \"reporter\": \"{{reporter}}\",\n  \"reporterPhone\": \"{{reporterPhone}}\",\n  \"problem\": \"{{problem}}\",\n  \"assignee\": \"{{assignee}}\",\n  \"assignAt\": \"{{assignAt}}\",\n  \"closeAt\": \"{{closeAt}}\",\n  \"record\": \"{{record}}\",\n  \"pauseReason\": \"{{pauseReason}}\",\n  \"maintain\": \"{{maintain}}\"\n}"
            }
          },
          "name": "update repair order",
          "description": "update repair order"
        },
        {
          "id": "54c22c68-49e9-4f5a-9469-d60a036142ab",
          "response": [
            {
              "id": "8b4af561-35f8-4cce-8e01-d975cf21b3ea",
              "header": [],
              "cookie": [],
              "name": "Response_204",
              "originalRequest": {
                "url": {
                  "path": ["repairs/:repairId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "repairId",
                      "type": "string",
                      "value": "{{repairId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 204,
              "status": "repair order deleted"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "05b1b560-1c2d-43da-82f0-b6e350829f5a",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 204\", function () {",
                  "  pm.response.to.have.status(204);",
                  "});",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["repairs/:repairId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "repairId",
                  "type": "string",
                  "value": "{{repairId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "deleteRepair",
          "description": "deleteRepair"
        },
        {
          "id": "4a7c8da6-dd44-498a-8f04-08985eb8e4af",
          "response": [
            {
              "id": "ea7a149b-d947-4325-84a3-04bb6e6ee1c1",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["repairs/:repairId/record"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "repairId",
                      "type": "string",
                      "value": "{{repairId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"signAddress\": \"{{signAddress}}\",\n  \"arrivalAt\": \"{{arrivalAt}}\",\n  \"mileages\": \"{{mileages}}\",\n  \"routeMap\": \"{{routeMap}}\",\n  \"faultCell\": \"{{faultCell}}\",\n  \"workHours\": \"{{workHours}}\",\n  \"failReason\": \"{{failReason}}\",\n  \"processMethod\": \"{{processMethod}}\",\n  \"faultAttr\": \"{{faultAttr}}\",\n  \"faultMode\": \"{{faultMode}}\",\n  \"backups\": \"{{backups}}\",\n  \"livePic\": \"{{livePic}}\",\n  \"resultDesc\": \"{{resultDesc}}\",\n  \"softwarePic\": \"{{softwarePic}}\",\n  \"frontPic\": \"{{frontPic}}\",\n  \"nameplatePic\": \"{{nameplatePic}}\",\n  \"meterPic\": \"{{meterPic}}\",\n  \"batteryPic\": \"{{batteryPic}}\",\n  \"otherPic\": \"{{otherPic}}\",\n  \"dataFile\": \"{{dataFile}}\",\n  \"otherCost\": \"{{otherCost}}\",\n  \"remark\": \"{{remark}}\",\n  \"workers\": \"{{workers}}\",\n  \"pauseReason\": \"{{pauseReason}}\"\n}"
                }
              },
              "code": 200,
              "status": "The repair order"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a7f406f1-e3ce-4252-b036-b64774d85196",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"type\":\"object\",\"required\":[\"signAddress\",\"arrivalAt\",\"mileages\",\"faultCell\",\"workHours\",\"failReason\",\"processMethod\",\"faultAttr\",\"faultMode\",\"livePic\",\"resultDesc\",\"softwarePic\",\"frontPic\",\"nameplatePic\",\"meterPic\",\"batteryPic\",\"workers\"],\"properties\":{\"signAddress\":{\"type\":\"string\"},\"arrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"mileages\":{\"type\":\"string\"},\"routeMap\":{\"type\":\"string\"},\"faultCell\":{\"type\":\"string\"},\"workHours\":{\"type\":\"string\"},\"failReason\":{\"type\":\"string\"},\"processMethod\":{\"type\":\"string\"},\"faultAttr\":{\"type\":\"string\"},\"faultMode\":{\"type\":\"string\"},\"backups\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"itemNo\":{\"type\":\"string\"},\"unitPrice\":{\"type\":\"string\"},\"quantity\":{\"type\":\"number\"},\"free\":{\"type\":\"boolean\"}}}},\"livePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"resultDesc\":{\"type\":\"string\"},\"softwarePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"otherPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"dataFile\":{\"type\":\"string\"},\"otherCost\":{\"type\":\"string\"},\"remark\":{\"type\":\"string\"},\"workers\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"user\":{\"type\":\"string\"},\"mileages\":{\"type\":\"string\"},\"Workload\":{\"type\":\"number\"}}}},\"pauseReason\":{\"type\":\"string\"}}}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["repairs/:repairId/record"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "repairId",
                  "type": "string",
                  "value": "{{repairId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"signAddress\": \"{{signAddress}}\",\n  \"arrivalAt\": \"{{arrivalAt}}\",\n  \"mileages\": \"{{mileages}}\",\n  \"routeMap\": \"{{routeMap}}\",\n  \"faultCell\": \"{{faultCell}}\",\n  \"workHours\": \"{{workHours}}\",\n  \"failReason\": \"{{failReason}}\",\n  \"processMethod\": \"{{processMethod}}\",\n  \"faultAttr\": \"{{faultAttr}}\",\n  \"faultMode\": \"{{faultMode}}\",\n  \"backups\": \"{{backups}}\",\n  \"livePic\": \"{{livePic}}\",\n  \"resultDesc\": \"{{resultDesc}}\",\n  \"softwarePic\": \"{{softwarePic}}\",\n  \"frontPic\": \"{{frontPic}}\",\n  \"nameplatePic\": \"{{nameplatePic}}\",\n  \"meterPic\": \"{{meterPic}}\",\n  \"batteryPic\": \"{{batteryPic}}\",\n  \"otherPic\": \"{{otherPic}}\",\n  \"dataFile\": \"{{dataFile}}\",\n  \"otherCost\": \"{{otherCost}}\",\n  \"remark\": \"{{remark}}\",\n  \"workers\": \"{{workers}}\",\n  \"pauseReason\": \"{{pauseReason}}\"\n}"
            }
          },
          "name": "update repair order record",
          "description": "update repair order record"
        }
      ],
      "event": []
    },
    {
      "id": "82f43f53-75d4-4ab7-a2a8-b24816b39cf1",
      "name": "maintain",
      "item": [
        {
          "id": "88995d66-8bb6-4295-b74b-334d923c5328",
          "response": [
            {
              "id": "495a4143-5177-41eb-9500-bf34b08e10a8",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_201",
              "originalRequest": {
                "url": {
                  "path": ["maintains"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ticket\": \"{{ticket}}\",\n  \"status\": \"{{status}}\",\n  \"rejected\": \"{{rejected}}\",\n  \"crm\": \"{{crm}}\",\n  \"vehicle\": \"{{vehicle}}\",\n  \"terminal\": \"{{terminal}}\",\n  \"plate\": \"{{plate}}\",\n  \"vin\": \"{{vin}}\",\n  \"brands\": \"{{brands}}\",\n  \"appearance\": \"{{appearance}}\",\n  \"software\": \"{{software}}\",\n  \"closeAt\": \"{{closeAt}}\",\n  \"appearanceRecord\": \"{{appearanceRecord}}\",\n  \"softwareRecord\": \"{{softwareRecord}}\",\n  \"repair\": \"{{repair}}\"\n}"
                }
              },
              "code": 201,
              "status": "The maintain order created"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "54b99d4e-76f9-4af0-98dc-9c767e7d2921",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 201\", function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"status\":{\"type\":\"string\",\"enum\":[\"CREATING\",\"WAITING\",\"MAINTAINING\",\"REPARING\",\"MAINTAINED\",\"PENDING\",\"PASSED\"]},\"rejected\":{\"type\":\"boolean\"},\"crm\":{\"type\":\"string\"},\"vehicle\":{\"type\":\"string\"},\"terminal\":{\"type\":\"string\"},\"plate\":{\"type\":\"string\"},\"vin\":{\"type\":\"string\"},\"brands\":{\"type\":\"string\"},\"appearance\":{\"type\":\"string\"},\"software\":{\"type\":\"string\"},\"closeAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"appearanceRecord\":{\"type\":\"object\",\"required\":[\"appearanceSignAddress\",\"appearanceArrivalAt\",\"appearanceWorkers\",\"meterAlarm\",\"boxDamage\",\"electricLeakage\",\"valveLoose\",\"coverAbnormal\",\"headLoose\",\"boltLoose\",\"msdAbnormal\",\"hvWireWear\",\"lvWireWear\",\"hvConnectorFasten\",\"lvConnectorFasten\",\"frontPic\",\"nameplatePic\",\"meterPic\",\"batteryPic\"],\"properties\":{\"appearanceSignAddress\":{\"type\":\"string\"},\"appearanceArrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"appearanceRouteMap\":{\"type\":\"string\"},\"appearanceWorkers\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterAlarm\":{\"type\":\"boolean\"},\"meterAlarmResult\":{\"type\":\"boolean\"},\"meterAlarmDesc\":{\"type\":\"string\"},\"boxDamage\":{\"type\":\"boolean\"},\"boxDamageResult\":{\"type\":\"boolean\"},\"boxDamageDesc\":{\"type\":\"string\"},\"electricLeakage\":{\"type\":\"boolean\"},\"electricLeakageResult\":{\"type\":\"boolean\"},\"electricLeakageDesc\":{\"type\":\"string\"},\"valveLoose\":{\"type\":\"boolean\"},\"valveLooseResult\":{\"type\":\"boolean\"},\"valveLooseDesc\":{\"type\":\"string\"},\"coverAbnormal\":{\"type\":\"boolean\"},\"coverAbnormalResult\":{\"type\":\"boolean\"},\"coverAbnormalDesc\":{\"type\":\"string\"},\"headLoose\":{\"type\":\"boolean\"},\"headLooseResult\":{\"type\":\"boolean\"},\"headLooseDesc\":{\"type\":\"string\"},\"boltLoose\":{\"type\":\"boolean\"},\"boltLooseResult\":{\"type\":\"boolean\"},\"boltLooseDesc\":{\"type\":\"string\"},\"msdAbnormal\":{\"type\":\"boolean\"},\"msdAbnormalResult\":{\"type\":\"boolean\"},\"msdAbnormalDesc\":{\"type\":\"string\"},\"hvWireWear\":{\"type\":\"boolean\"},\"hvWireWearResult\":{\"type\":\"boolean\"},\"hvWireWearDesc\":{\"type\":\"string\"},\"lvWireWear\":{\"type\":\"boolean\"},\"lvWireWearResult\":{\"type\":\"boolean\"},\"lvWireWearDesc\":{\"type\":\"string\"},\"hvConnectorFasten\":{\"type\":\"boolean\"},\"hvConnectorFastenResult\":{\"type\":\"boolean\"},\"hvConnectorFastenDesc\":{\"type\":\"string\"},\"lvConnectorFasten\":{\"type\":\"boolean\"},\"lvConnectorFastenResult\":{\"type\":\"boolean\"},\"lvConnectorFastenDesc\":{\"type\":\"string\"},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}},\"softwareRecord\":{\"type\":\"object\",\"required\":[\"softwareSignAddress\",\"softwareArrivalAt\",\"softwareWorkers\",\"softwareStartPic\",\"softwareEndPic\",\"soh\",\"current\",\"soc\",\"roc\",\"addVoltage\",\"totalVoltage\",\"maxVoltage\",\"minVoltage\",\"maxTemperature\",\"minTemperature\",\"diffTemperature\",\"batteryBalance\",\"diffVoltage\",\"chargePositive\",\"chargeNegative\",\"nochargePositive\",\"nochargeNegative\"],\"properties\":{\"softwareSignAddress\":{\"type\":\"string\"},\"softwareArrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"softwareRouteMap\":{\"type\":\"string\"},\"softwareWorkers\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"softwareStartPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"softwareEndPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"soh\":{\"type\":\"string\"},\"sohResult\":{\"type\":\"string\"},\"sohDesc\":{\"type\":\"string\"},\"current\":{\"type\":\"string\"},\"currentResult\":{\"type\":\"string\"},\"currentDesc\":{\"type\":\"string\"},\"soc\":{\"type\":\"string\"},\"socResult\":{\"type\":\"string\"},\"roc\":{\"type\":\"string\"},\"rocResult\":{\"type\":\"string\"},\"socDesc\":{\"type\":\"string\"},\"addVoltage\":{\"type\":\"string\"},\"addVoltageResult\":{\"type\":\"string\"},\"totalVoltage\":{\"type\":\"string\"},\"totalVoltageResult\":{\"type\":\"string\"},\"addVoltageDesc\":{\"type\":\"string\"},\"maxVoltage\":{\"type\":\"string\"},\"maxVoltageResult\":{\"type\":\"string\"},\"maxVoltageDesc\":{\"type\":\"string\"},\"minVoltage\":{\"type\":\"string\"},\"minVoltageResult\":{\"type\":\"string\"},\"minVoltageDesc\":{\"type\":\"string\"},\"maxTemperature\":{\"type\":\"string\"},\"maxTemperatureResult\":{\"type\":\"string\"},\"maxTemperatureDesc\":{\"type\":\"string\"},\"minTemperature\":{\"type\":\"string\"},\"minTemperatureResult\":{\"type\":\"string\"},\"minTemperatureDesc\":{\"type\":\"string\"},\"diffTemperature\":{\"type\":\"string\"},\"diffTemperatureResult\":{\"type\":\"string\"},\"diffTemperatureDesc\":{\"type\":\"string\"},\"batteryBalance\":{\"type\":\"string\",\"enum\":[\"LOW\",\"MIDDLE\",\"HIGH\"]},\"diffVoltage\":{\"type\":\"string\"},\"diffVoltageResult\":{\"type\":\"string\"},\"diffVoltageDesc\":{\"type\":\"string\"},\"chargePositive\":{\"type\":\"string\"},\"chargePositiveResult\":{\"type\":\"string\"},\"chargeNegative\":{\"type\":\"string\"},\"chargeNegativeResult\":{\"type\":\"string\"},\"chargePositiveDesc\":{\"type\":\"string\"},\"nochargePositive\":{\"type\":\"string\"},\"nochargePositiveResult\":{\"type\":\"string\"},\"nochargeNegative\":{\"type\":\"string\"},\"nochargeNegativeResult\":{\"type\":\"string\"},\"nochargePositiveDesc\":{\"type\":\"string\"}}},\"repair\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["maintains"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ticket\": \"{{ticket}}\",\n  \"status\": \"{{status}}\",\n  \"rejected\": \"{{rejected}}\",\n  \"crm\": \"{{crm}}\",\n  \"vehicle\": \"{{vehicle}}\",\n  \"terminal\": \"{{terminal}}\",\n  \"plate\": \"{{plate}}\",\n  \"vin\": \"{{vin}}\",\n  \"brands\": \"{{brands}}\",\n  \"appearance\": \"{{appearance}}\",\n  \"software\": \"{{software}}\",\n  \"closeAt\": \"{{closeAt}}\",\n  \"appearanceRecord\": \"{{appearanceRecord}}\",\n  \"softwareRecord\": \"{{softwareRecord}}\",\n  \"repair\": \"{{repair}}\"\n}"
            }
          },
          "name": "Create a maintain order",
          "description": "Create a maintain order"
        },
        {
          "id": "39e60cff-ce59-4e80-8867-94ccfc433591",
          "response": [
            {
              "id": "c274d55f-b1ab-4420-84c6-9bb0b83f87ba",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                },
                {
                  "key": "X-Total-Count",
                  "value": "unset"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["maintains"],
                  "host": "{{baseUrl}}",
                  "query": [
                    {
                      "key": "_limit",
                      "value": ""
                    },
                    {
                      "key": "_offset",
                      "value": ""
                    },
                    {
                      "key": "_sort",
                      "value": ""
                    },
                    {
                      "key": "_select",
                      "value": ""
                    },
                    {
                      "key": "id_like",
                      "value": ""
                    },
                    {
                      "key": "status",
                      "value": ""
                    },
                    {
                      "key": "createAt_gt",
                      "value": ""
                    },
                    {
                      "key": "createAt_lt",
                      "value": ""
                    },
                    {
                      "key": "terminal_like",
                      "value": ""
                    },
                    {
                      "key": "plate_like",
                      "value": ""
                    },
                    {
                      "key": "crm_like",
                      "value": ""
                    },
                    {
                      "key": "vin_like",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 200,
              "status": "A paged array of maintain orders"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9456997-0c13-47ed-a6db-69874984e60c",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"type\":\"array\",\"items\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"status\":{\"type\":\"string\",\"enum\":[\"CREATING\",\"WAITING\",\"MAINTAINING\",\"REPARING\",\"MAINTAINED\",\"PENDING\",\"PASSED\"]},\"rejected\":{\"type\":\"boolean\"},\"crm\":{\"type\":\"string\"},\"vehicle\":{\"type\":\"string\"},\"terminal\":{\"type\":\"string\"},\"plate\":{\"type\":\"string\"},\"vin\":{\"type\":\"string\"},\"brands\":{\"type\":\"string\"},\"appearance\":{\"type\":\"string\"},\"software\":{\"type\":\"string\"},\"closeAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"appearanceRecord\":{\"type\":\"object\",\"required\":[\"appearanceSignAddress\",\"appearanceArrivalAt\",\"appearanceWorkers\",\"meterAlarm\",\"boxDamage\",\"electricLeakage\",\"valveLoose\",\"coverAbnormal\",\"headLoose\",\"boltLoose\",\"msdAbnormal\",\"hvWireWear\",\"lvWireWear\",\"hvConnectorFasten\",\"lvConnectorFasten\",\"frontPic\",\"nameplatePic\",\"meterPic\",\"batteryPic\"],\"properties\":{\"appearanceSignAddress\":{\"type\":\"string\"},\"appearanceArrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"appearanceRouteMap\":{\"type\":\"string\"},\"appearanceWorkers\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterAlarm\":{\"type\":\"boolean\"},\"meterAlarmResult\":{\"type\":\"boolean\"},\"meterAlarmDesc\":{\"type\":\"string\"},\"boxDamage\":{\"type\":\"boolean\"},\"boxDamageResult\":{\"type\":\"boolean\"},\"boxDamageDesc\":{\"type\":\"string\"},\"electricLeakage\":{\"type\":\"boolean\"},\"electricLeakageResult\":{\"type\":\"boolean\"},\"electricLeakageDesc\":{\"type\":\"string\"},\"valveLoose\":{\"type\":\"boolean\"},\"valveLooseResult\":{\"type\":\"boolean\"},\"valveLooseDesc\":{\"type\":\"string\"},\"coverAbnormal\":{\"type\":\"boolean\"},\"coverAbnormalResult\":{\"type\":\"boolean\"},\"coverAbnormalDesc\":{\"type\":\"string\"},\"headLoose\":{\"type\":\"boolean\"},\"headLooseResult\":{\"type\":\"boolean\"},\"headLooseDesc\":{\"type\":\"string\"},\"boltLoose\":{\"type\":\"boolean\"},\"boltLooseResult\":{\"type\":\"boolean\"},\"boltLooseDesc\":{\"type\":\"string\"},\"msdAbnormal\":{\"type\":\"boolean\"},\"msdAbnormalResult\":{\"type\":\"boolean\"},\"msdAbnormalDesc\":{\"type\":\"string\"},\"hvWireWear\":{\"type\":\"boolean\"},\"hvWireWearResult\":{\"type\":\"boolean\"},\"hvWireWearDesc\":{\"type\":\"string\"},\"lvWireWear\":{\"type\":\"boolean\"},\"lvWireWearResult\":{\"type\":\"boolean\"},\"lvWireWearDesc\":{\"type\":\"string\"},\"hvConnectorFasten\":{\"type\":\"boolean\"},\"hvConnectorFastenResult\":{\"type\":\"boolean\"},\"hvConnectorFastenDesc\":{\"type\":\"string\"},\"lvConnectorFasten\":{\"type\":\"boolean\"},\"lvConnectorFastenResult\":{\"type\":\"boolean\"},\"lvConnectorFastenDesc\":{\"type\":\"string\"},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}},\"softwareRecord\":{\"type\":\"object\",\"required\":[\"softwareSignAddress\",\"softwareArrivalAt\",\"softwareWorkers\",\"softwareStartPic\",\"softwareEndPic\",\"soh\",\"current\",\"soc\",\"roc\",\"addVoltage\",\"totalVoltage\",\"maxVoltage\",\"minVoltage\",\"maxTemperature\",\"minTemperature\",\"diffTemperature\",\"batteryBalance\",\"diffVoltage\",\"chargePositive\",\"chargeNegative\",\"nochargePositive\",\"nochargeNegative\"],\"properties\":{\"softwareSignAddress\":{\"type\":\"string\"},\"softwareArrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"softwareRouteMap\":{\"type\":\"string\"},\"softwareWorkers\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"softwareStartPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"softwareEndPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"soh\":{\"type\":\"string\"},\"sohResult\":{\"type\":\"string\"},\"sohDesc\":{\"type\":\"string\"},\"current\":{\"type\":\"string\"},\"currentResult\":{\"type\":\"string\"},\"currentDesc\":{\"type\":\"string\"},\"soc\":{\"type\":\"string\"},\"socResult\":{\"type\":\"string\"},\"roc\":{\"type\":\"string\"},\"rocResult\":{\"type\":\"string\"},\"socDesc\":{\"type\":\"string\"},\"addVoltage\":{\"type\":\"string\"},\"addVoltageResult\":{\"type\":\"string\"},\"totalVoltage\":{\"type\":\"string\"},\"totalVoltageResult\":{\"type\":\"string\"},\"addVoltageDesc\":{\"type\":\"string\"},\"maxVoltage\":{\"type\":\"string\"},\"maxVoltageResult\":{\"type\":\"string\"},\"maxVoltageDesc\":{\"type\":\"string\"},\"minVoltage\":{\"type\":\"string\"},\"minVoltageResult\":{\"type\":\"string\"},\"minVoltageDesc\":{\"type\":\"string\"},\"maxTemperature\":{\"type\":\"string\"},\"maxTemperatureResult\":{\"type\":\"string\"},\"maxTemperatureDesc\":{\"type\":\"string\"},\"minTemperature\":{\"type\":\"string\"},\"minTemperatureResult\":{\"type\":\"string\"},\"minTemperatureDesc\":{\"type\":\"string\"},\"diffTemperature\":{\"type\":\"string\"},\"diffTemperatureResult\":{\"type\":\"string\"},\"diffTemperatureDesc\":{\"type\":\"string\"},\"batteryBalance\":{\"type\":\"string\",\"enum\":[\"LOW\",\"MIDDLE\",\"HIGH\"]},\"diffVoltage\":{\"type\":\"string\"},\"diffVoltageResult\":{\"type\":\"string\"},\"diffVoltageDesc\":{\"type\":\"string\"},\"chargePositive\":{\"type\":\"string\"},\"chargePositiveResult\":{\"type\":\"string\"},\"chargeNegative\":{\"type\":\"string\"},\"chargeNegativeResult\":{\"type\":\"string\"},\"chargePositiveDesc\":{\"type\":\"string\"},\"nochargePositive\":{\"type\":\"string\"},\"nochargePositiveResult\":{\"type\":\"string\"},\"nochargeNegative\":{\"type\":\"string\"},\"nochargeNegativeResult\":{\"type\":\"string\"},\"nochargePositiveDesc\":{\"type\":\"string\"}}},\"repair\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}},\"headers\":{\"type\":\"object\",\"required\":[\"X-Total-Count\"],\"properties\":{\"X-Total-Count\":{\"type\":\"integer\"}}}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["maintains"],
              "host": "{{baseUrl}}",
              "query": [
                {
                  "key": "_limit",
                  "value": ""
                },
                {
                  "key": "_offset",
                  "value": ""
                },
                {
                  "key": "_sort",
                  "value": ""
                },
                {
                  "key": "_select",
                  "value": ""
                },
                {
                  "key": "id_like",
                  "value": ""
                },
                {
                  "key": "status",
                  "value": ""
                },
                {
                  "key": "createAt_gt",
                  "value": ""
                },
                {
                  "key": "createAt_lt",
                  "value": ""
                },
                {
                  "key": "terminal_like",
                  "value": ""
                },
                {
                  "key": "plate_like",
                  "value": ""
                },
                {
                  "key": "crm_like",
                  "value": ""
                },
                {
                  "key": "vin_like",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "List all maintain orders",
          "description": "List all maintain orders"
        },
        {
          "id": "fc7a203e-08ff-4a8c-8620-ef3483d97552",
          "response": [
            {
              "id": "da9e1dbe-6439-42d3-a460-a8479e5e0647",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["maintains/:maintainId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "maintainId",
                      "type": "string",
                      "value": "{{maintainId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 200,
              "status": "Expected response to a valid request"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ae42c0fc-510e-4ac4-a481-36b80bdc255d",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"status\":{\"type\":\"string\",\"enum\":[\"CREATING\",\"WAITING\",\"MAINTAINING\",\"REPARING\",\"MAINTAINED\",\"PENDING\",\"PASSED\"]},\"rejected\":{\"type\":\"boolean\"},\"crm\":{\"type\":\"string\"},\"vehicle\":{\"type\":\"string\"},\"terminal\":{\"type\":\"string\"},\"plate\":{\"type\":\"string\"},\"vin\":{\"type\":\"string\"},\"brands\":{\"type\":\"string\"},\"appearance\":{\"type\":\"string\"},\"software\":{\"type\":\"string\"},\"closeAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"appearanceRecord\":{\"type\":\"object\",\"required\":[\"appearanceSignAddress\",\"appearanceArrivalAt\",\"appearanceWorkers\",\"meterAlarm\",\"boxDamage\",\"electricLeakage\",\"valveLoose\",\"coverAbnormal\",\"headLoose\",\"boltLoose\",\"msdAbnormal\",\"hvWireWear\",\"lvWireWear\",\"hvConnectorFasten\",\"lvConnectorFasten\",\"frontPic\",\"nameplatePic\",\"meterPic\",\"batteryPic\"],\"properties\":{\"appearanceSignAddress\":{\"type\":\"string\"},\"appearanceArrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"appearanceRouteMap\":{\"type\":\"string\"},\"appearanceWorkers\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterAlarm\":{\"type\":\"boolean\"},\"meterAlarmResult\":{\"type\":\"boolean\"},\"meterAlarmDesc\":{\"type\":\"string\"},\"boxDamage\":{\"type\":\"boolean\"},\"boxDamageResult\":{\"type\":\"boolean\"},\"boxDamageDesc\":{\"type\":\"string\"},\"electricLeakage\":{\"type\":\"boolean\"},\"electricLeakageResult\":{\"type\":\"boolean\"},\"electricLeakageDesc\":{\"type\":\"string\"},\"valveLoose\":{\"type\":\"boolean\"},\"valveLooseResult\":{\"type\":\"boolean\"},\"valveLooseDesc\":{\"type\":\"string\"},\"coverAbnormal\":{\"type\":\"boolean\"},\"coverAbnormalResult\":{\"type\":\"boolean\"},\"coverAbnormalDesc\":{\"type\":\"string\"},\"headLoose\":{\"type\":\"boolean\"},\"headLooseResult\":{\"type\":\"boolean\"},\"headLooseDesc\":{\"type\":\"string\"},\"boltLoose\":{\"type\":\"boolean\"},\"boltLooseResult\":{\"type\":\"boolean\"},\"boltLooseDesc\":{\"type\":\"string\"},\"msdAbnormal\":{\"type\":\"boolean\"},\"msdAbnormalResult\":{\"type\":\"boolean\"},\"msdAbnormalDesc\":{\"type\":\"string\"},\"hvWireWear\":{\"type\":\"boolean\"},\"hvWireWearResult\":{\"type\":\"boolean\"},\"hvWireWearDesc\":{\"type\":\"string\"},\"lvWireWear\":{\"type\":\"boolean\"},\"lvWireWearResult\":{\"type\":\"boolean\"},\"lvWireWearDesc\":{\"type\":\"string\"},\"hvConnectorFasten\":{\"type\":\"boolean\"},\"hvConnectorFastenResult\":{\"type\":\"boolean\"},\"hvConnectorFastenDesc\":{\"type\":\"string\"},\"lvConnectorFasten\":{\"type\":\"boolean\"},\"lvConnectorFastenResult\":{\"type\":\"boolean\"},\"lvConnectorFastenDesc\":{\"type\":\"string\"},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}},\"softwareRecord\":{\"type\":\"object\",\"required\":[\"softwareSignAddress\",\"softwareArrivalAt\",\"softwareWorkers\",\"softwareStartPic\",\"softwareEndPic\",\"soh\",\"current\",\"soc\",\"roc\",\"addVoltage\",\"totalVoltage\",\"maxVoltage\",\"minVoltage\",\"maxTemperature\",\"minTemperature\",\"diffTemperature\",\"batteryBalance\",\"diffVoltage\",\"chargePositive\",\"chargeNegative\",\"nochargePositive\",\"nochargeNegative\"],\"properties\":{\"softwareSignAddress\":{\"type\":\"string\"},\"softwareArrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"softwareRouteMap\":{\"type\":\"string\"},\"softwareWorkers\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"softwareStartPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"softwareEndPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"soh\":{\"type\":\"string\"},\"sohResult\":{\"type\":\"string\"},\"sohDesc\":{\"type\":\"string\"},\"current\":{\"type\":\"string\"},\"currentResult\":{\"type\":\"string\"},\"currentDesc\":{\"type\":\"string\"},\"soc\":{\"type\":\"string\"},\"socResult\":{\"type\":\"string\"},\"roc\":{\"type\":\"string\"},\"rocResult\":{\"type\":\"string\"},\"socDesc\":{\"type\":\"string\"},\"addVoltage\":{\"type\":\"string\"},\"addVoltageResult\":{\"type\":\"string\"},\"totalVoltage\":{\"type\":\"string\"},\"totalVoltageResult\":{\"type\":\"string\"},\"addVoltageDesc\":{\"type\":\"string\"},\"maxVoltage\":{\"type\":\"string\"},\"maxVoltageResult\":{\"type\":\"string\"},\"maxVoltageDesc\":{\"type\":\"string\"},\"minVoltage\":{\"type\":\"string\"},\"minVoltageResult\":{\"type\":\"string\"},\"minVoltageDesc\":{\"type\":\"string\"},\"maxTemperature\":{\"type\":\"string\"},\"maxTemperatureResult\":{\"type\":\"string\"},\"maxTemperatureDesc\":{\"type\":\"string\"},\"minTemperature\":{\"type\":\"string\"},\"minTemperatureResult\":{\"type\":\"string\"},\"minTemperatureDesc\":{\"type\":\"string\"},\"diffTemperature\":{\"type\":\"string\"},\"diffTemperatureResult\":{\"type\":\"string\"},\"diffTemperatureDesc\":{\"type\":\"string\"},\"batteryBalance\":{\"type\":\"string\",\"enum\":[\"LOW\",\"MIDDLE\",\"HIGH\"]},\"diffVoltage\":{\"type\":\"string\"},\"diffVoltageResult\":{\"type\":\"string\"},\"diffVoltageDesc\":{\"type\":\"string\"},\"chargePositive\":{\"type\":\"string\"},\"chargePositiveResult\":{\"type\":\"string\"},\"chargeNegative\":{\"type\":\"string\"},\"chargeNegativeResult\":{\"type\":\"string\"},\"chargePositiveDesc\":{\"type\":\"string\"},\"nochargePositive\":{\"type\":\"string\"},\"nochargePositiveResult\":{\"type\":\"string\"},\"nochargeNegative\":{\"type\":\"string\"},\"nochargeNegativeResult\":{\"type\":\"string\"},\"nochargePositiveDesc\":{\"type\":\"string\"}}},\"repair\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["maintains/:maintainId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "maintainId",
                  "type": "string",
                  "value": "{{maintainId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "Find maintain order by id",
          "description": "Find maintain order by id"
        },
        {
          "id": "211f2c11-a8f2-4103-b9f3-3ffa0b6dc816",
          "response": [
            {
              "id": "891ba2f8-18b1-4b03-8398-e366ee6eff3a",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["maintains/:maintainId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "maintainId",
                      "type": "string",
                      "value": "{{maintainId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ticket\": \"{{ticket}}\",\n  \"status\": \"{{status}}\",\n  \"rejected\": \"{{rejected}}\",\n  \"crm\": \"{{crm}}\",\n  \"vehicle\": \"{{vehicle}}\",\n  \"terminal\": \"{{terminal}}\",\n  \"plate\": \"{{plate}}\",\n  \"vin\": \"{{vin}}\",\n  \"brands\": \"{{brands}}\",\n  \"appearance\": \"{{appearance}}\",\n  \"software\": \"{{software}}\",\n  \"closeAt\": \"{{closeAt}}\",\n  \"appearanceRecord\": \"{{appearanceRecord}}\",\n  \"softwareRecord\": \"{{softwareRecord}}\",\n  \"repair\": \"{{repair}}\"\n}"
                }
              },
              "code": 200,
              "status": "The maintain order"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ce140b0-565a-40eb-88a3-ed8c80e30f46",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"status\":{\"type\":\"string\",\"enum\":[\"CREATING\",\"WAITING\",\"MAINTAINING\",\"REPARING\",\"MAINTAINED\",\"PENDING\",\"PASSED\"]},\"rejected\":{\"type\":\"boolean\"},\"crm\":{\"type\":\"string\"},\"vehicle\":{\"type\":\"string\"},\"terminal\":{\"type\":\"string\"},\"plate\":{\"type\":\"string\"},\"vin\":{\"type\":\"string\"},\"brands\":{\"type\":\"string\"},\"appearance\":{\"type\":\"string\"},\"software\":{\"type\":\"string\"},\"closeAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"appearanceRecord\":{\"type\":\"object\",\"required\":[\"appearanceSignAddress\",\"appearanceArrivalAt\",\"appearanceWorkers\",\"meterAlarm\",\"boxDamage\",\"electricLeakage\",\"valveLoose\",\"coverAbnormal\",\"headLoose\",\"boltLoose\",\"msdAbnormal\",\"hvWireWear\",\"lvWireWear\",\"hvConnectorFasten\",\"lvConnectorFasten\",\"frontPic\",\"nameplatePic\",\"meterPic\",\"batteryPic\"],\"properties\":{\"appearanceSignAddress\":{\"type\":\"string\"},\"appearanceArrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"appearanceRouteMap\":{\"type\":\"string\"},\"appearanceWorkers\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterAlarm\":{\"type\":\"boolean\"},\"meterAlarmResult\":{\"type\":\"boolean\"},\"meterAlarmDesc\":{\"type\":\"string\"},\"boxDamage\":{\"type\":\"boolean\"},\"boxDamageResult\":{\"type\":\"boolean\"},\"boxDamageDesc\":{\"type\":\"string\"},\"electricLeakage\":{\"type\":\"boolean\"},\"electricLeakageResult\":{\"type\":\"boolean\"},\"electricLeakageDesc\":{\"type\":\"string\"},\"valveLoose\":{\"type\":\"boolean\"},\"valveLooseResult\":{\"type\":\"boolean\"},\"valveLooseDesc\":{\"type\":\"string\"},\"coverAbnormal\":{\"type\":\"boolean\"},\"coverAbnormalResult\":{\"type\":\"boolean\"},\"coverAbnormalDesc\":{\"type\":\"string\"},\"headLoose\":{\"type\":\"boolean\"},\"headLooseResult\":{\"type\":\"boolean\"},\"headLooseDesc\":{\"type\":\"string\"},\"boltLoose\":{\"type\":\"boolean\"},\"boltLooseResult\":{\"type\":\"boolean\"},\"boltLooseDesc\":{\"type\":\"string\"},\"msdAbnormal\":{\"type\":\"boolean\"},\"msdAbnormalResult\":{\"type\":\"boolean\"},\"msdAbnormalDesc\":{\"type\":\"string\"},\"hvWireWear\":{\"type\":\"boolean\"},\"hvWireWearResult\":{\"type\":\"boolean\"},\"hvWireWearDesc\":{\"type\":\"string\"},\"lvWireWear\":{\"type\":\"boolean\"},\"lvWireWearResult\":{\"type\":\"boolean\"},\"lvWireWearDesc\":{\"type\":\"string\"},\"hvConnectorFasten\":{\"type\":\"boolean\"},\"hvConnectorFastenResult\":{\"type\":\"boolean\"},\"hvConnectorFastenDesc\":{\"type\":\"string\"},\"lvConnectorFasten\":{\"type\":\"boolean\"},\"lvConnectorFastenResult\":{\"type\":\"boolean\"},\"lvConnectorFastenDesc\":{\"type\":\"string\"},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}},\"softwareRecord\":{\"type\":\"object\",\"required\":[\"softwareSignAddress\",\"softwareArrivalAt\",\"softwareWorkers\",\"softwareStartPic\",\"softwareEndPic\",\"soh\",\"current\",\"soc\",\"roc\",\"addVoltage\",\"totalVoltage\",\"maxVoltage\",\"minVoltage\",\"maxTemperature\",\"minTemperature\",\"diffTemperature\",\"batteryBalance\",\"diffVoltage\",\"chargePositive\",\"chargeNegative\",\"nochargePositive\",\"nochargeNegative\"],\"properties\":{\"softwareSignAddress\":{\"type\":\"string\"},\"softwareArrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"softwareRouteMap\":{\"type\":\"string\"},\"softwareWorkers\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"softwareStartPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"softwareEndPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"soh\":{\"type\":\"string\"},\"sohResult\":{\"type\":\"string\"},\"sohDesc\":{\"type\":\"string\"},\"current\":{\"type\":\"string\"},\"currentResult\":{\"type\":\"string\"},\"currentDesc\":{\"type\":\"string\"},\"soc\":{\"type\":\"string\"},\"socResult\":{\"type\":\"string\"},\"roc\":{\"type\":\"string\"},\"rocResult\":{\"type\":\"string\"},\"socDesc\":{\"type\":\"string\"},\"addVoltage\":{\"type\":\"string\"},\"addVoltageResult\":{\"type\":\"string\"},\"totalVoltage\":{\"type\":\"string\"},\"totalVoltageResult\":{\"type\":\"string\"},\"addVoltageDesc\":{\"type\":\"string\"},\"maxVoltage\":{\"type\":\"string\"},\"maxVoltageResult\":{\"type\":\"string\"},\"maxVoltageDesc\":{\"type\":\"string\"},\"minVoltage\":{\"type\":\"string\"},\"minVoltageResult\":{\"type\":\"string\"},\"minVoltageDesc\":{\"type\":\"string\"},\"maxTemperature\":{\"type\":\"string\"},\"maxTemperatureResult\":{\"type\":\"string\"},\"maxTemperatureDesc\":{\"type\":\"string\"},\"minTemperature\":{\"type\":\"string\"},\"minTemperatureResult\":{\"type\":\"string\"},\"minTemperatureDesc\":{\"type\":\"string\"},\"diffTemperature\":{\"type\":\"string\"},\"diffTemperatureResult\":{\"type\":\"string\"},\"diffTemperatureDesc\":{\"type\":\"string\"},\"batteryBalance\":{\"type\":\"string\",\"enum\":[\"LOW\",\"MIDDLE\",\"HIGH\"]},\"diffVoltage\":{\"type\":\"string\"},\"diffVoltageResult\":{\"type\":\"string\"},\"diffVoltageDesc\":{\"type\":\"string\"},\"chargePositive\":{\"type\":\"string\"},\"chargePositiveResult\":{\"type\":\"string\"},\"chargeNegative\":{\"type\":\"string\"},\"chargeNegativeResult\":{\"type\":\"string\"},\"chargePositiveDesc\":{\"type\":\"string\"},\"nochargePositive\":{\"type\":\"string\"},\"nochargePositiveResult\":{\"type\":\"string\"},\"nochargeNegative\":{\"type\":\"string\"},\"nochargeNegativeResult\":{\"type\":\"string\"},\"nochargePositiveDesc\":{\"type\":\"string\"}}},\"repair\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["maintains/:maintainId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "maintainId",
                  "type": "string",
                  "value": "{{maintainId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ticket\": \"{{ticket}}\",\n  \"status\": \"{{status}}\",\n  \"rejected\": \"{{rejected}}\",\n  \"crm\": \"{{crm}}\",\n  \"vehicle\": \"{{vehicle}}\",\n  \"terminal\": \"{{terminal}}\",\n  \"plate\": \"{{plate}}\",\n  \"vin\": \"{{vin}}\",\n  \"brands\": \"{{brands}}\",\n  \"appearance\": \"{{appearance}}\",\n  \"software\": \"{{software}}\",\n  \"closeAt\": \"{{closeAt}}\",\n  \"appearanceRecord\": \"{{appearanceRecord}}\",\n  \"softwareRecord\": \"{{softwareRecord}}\",\n  \"repair\": \"{{repair}}\"\n}"
            }
          },
          "name": "update maintain order",
          "description": "update maintain order"
        },
        {
          "id": "925cd5c3-4368-4b24-b0c2-a4d5d71fcb81",
          "response": [
            {
              "id": "0df6f075-9786-40a3-98d9-c6f0cc150a4b",
              "header": [],
              "cookie": [],
              "name": "Response_204",
              "originalRequest": {
                "url": {
                  "path": ["maintains/:maintainId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "maintainId",
                      "type": "string",
                      "value": "{{maintainId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 204,
              "status": "maintain order deleted"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e19e9fbf-691b-4e78-bd8e-8f81e98e472b",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 204\", function () {",
                  "  pm.response.to.have.status(204);",
                  "});",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["maintains/:maintainId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "maintainId",
                  "type": "string",
                  "value": "{{maintainId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "deleteMaintain",
          "description": "deleteMaintain"
        },
        {
          "id": "de33f67b-a85a-4d7a-95c3-0b1b64835283",
          "response": [
            {
              "id": "09e1246e-39ab-47a7-a825-072dca1b6b92",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["maintains/:maintainId/appearanceRecord"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "maintainId",
                      "type": "string",
                      "value": "{{maintainId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"appearanceSignAddress\": \"{{appearanceSignAddress}}\",\n  \"appearanceArrivalAt\": \"{{appearanceArrivalAt}}\",\n  \"appearanceRouteMap\": \"{{appearanceRouteMap}}\",\n  \"appearanceWorkers\": \"{{appearanceWorkers}}\",\n  \"meterAlarm\": \"{{meterAlarm}}\",\n  \"meterAlarmResult\": \"{{meterAlarmResult}}\",\n  \"meterAlarmDesc\": \"{{meterAlarmDesc}}\",\n  \"boxDamage\": \"{{boxDamage}}\",\n  \"boxDamageResult\": \"{{boxDamageResult}}\",\n  \"boxDamageDesc\": \"{{boxDamageDesc}}\",\n  \"electricLeakage\": \"{{electricLeakage}}\",\n  \"electricLeakageResult\": \"{{electricLeakageResult}}\",\n  \"electricLeakageDesc\": \"{{electricLeakageDesc}}\",\n  \"valveLoose\": \"{{valveLoose}}\",\n  \"valveLooseResult\": \"{{valveLooseResult}}\",\n  \"valveLooseDesc\": \"{{valveLooseDesc}}\",\n  \"coverAbnormal\": \"{{coverAbnormal}}\",\n  \"coverAbnormalResult\": \"{{coverAbnormalResult}}\",\n  \"coverAbnormalDesc\": \"{{coverAbnormalDesc}}\",\n  \"headLoose\": \"{{headLoose}}\",\n  \"headLooseResult\": \"{{headLooseResult}}\",\n  \"headLooseDesc\": \"{{headLooseDesc}}\",\n  \"boltLoose\": \"{{boltLoose}}\",\n  \"boltLooseResult\": \"{{boltLooseResult}}\",\n  \"boltLooseDesc\": \"{{boltLooseDesc}}\",\n  \"msdAbnormal\": \"{{msdAbnormal}}\",\n  \"msdAbnormalResult\": \"{{msdAbnormalResult}}\",\n  \"msdAbnormalDesc\": \"{{msdAbnormalDesc}}\",\n  \"hvWireWear\": \"{{hvWireWear}}\",\n  \"hvWireWearResult\": \"{{hvWireWearResult}}\",\n  \"hvWireWearDesc\": \"{{hvWireWearDesc}}\",\n  \"lvWireWear\": \"{{lvWireWear}}\",\n  \"lvWireWearResult\": \"{{lvWireWearResult}}\",\n  \"lvWireWearDesc\": \"{{lvWireWearDesc}}\",\n  \"hvConnectorFasten\": \"{{hvConnectorFasten}}\",\n  \"hvConnectorFastenResult\": \"{{hvConnectorFastenResult}}\",\n  \"hvConnectorFastenDesc\": \"{{hvConnectorFastenDesc}}\",\n  \"lvConnectorFasten\": \"{{lvConnectorFasten}}\",\n  \"lvConnectorFastenResult\": \"{{lvConnectorFastenResult}}\",\n  \"lvConnectorFastenDesc\": \"{{lvConnectorFastenDesc}}\",\n  \"frontPic\": \"{{frontPic}}\",\n  \"nameplatePic\": \"{{nameplatePic}}\",\n  \"meterPic\": \"{{meterPic}}\",\n  \"batteryPic\": \"{{batteryPic}}\"\n}"
                }
              },
              "code": 200,
              "status": "The maintain order"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6f779ff1-365d-43bc-a9f5-d4f290f80745",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"type\":\"object\",\"required\":[\"appearanceSignAddress\",\"appearanceArrivalAt\",\"appearanceWorkers\",\"meterAlarm\",\"boxDamage\",\"electricLeakage\",\"valveLoose\",\"coverAbnormal\",\"headLoose\",\"boltLoose\",\"msdAbnormal\",\"hvWireWear\",\"lvWireWear\",\"hvConnectorFasten\",\"lvConnectorFasten\",\"frontPic\",\"nameplatePic\",\"meterPic\",\"batteryPic\"],\"properties\":{\"appearanceSignAddress\":{\"type\":\"string\"},\"appearanceArrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"appearanceRouteMap\":{\"type\":\"string\"},\"appearanceWorkers\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterAlarm\":{\"type\":\"boolean\"},\"meterAlarmResult\":{\"type\":\"boolean\"},\"meterAlarmDesc\":{\"type\":\"string\"},\"boxDamage\":{\"type\":\"boolean\"},\"boxDamageResult\":{\"type\":\"boolean\"},\"boxDamageDesc\":{\"type\":\"string\"},\"electricLeakage\":{\"type\":\"boolean\"},\"electricLeakageResult\":{\"type\":\"boolean\"},\"electricLeakageDesc\":{\"type\":\"string\"},\"valveLoose\":{\"type\":\"boolean\"},\"valveLooseResult\":{\"type\":\"boolean\"},\"valveLooseDesc\":{\"type\":\"string\"},\"coverAbnormal\":{\"type\":\"boolean\"},\"coverAbnormalResult\":{\"type\":\"boolean\"},\"coverAbnormalDesc\":{\"type\":\"string\"},\"headLoose\":{\"type\":\"boolean\"},\"headLooseResult\":{\"type\":\"boolean\"},\"headLooseDesc\":{\"type\":\"string\"},\"boltLoose\":{\"type\":\"boolean\"},\"boltLooseResult\":{\"type\":\"boolean\"},\"boltLooseDesc\":{\"type\":\"string\"},\"msdAbnormal\":{\"type\":\"boolean\"},\"msdAbnormalResult\":{\"type\":\"boolean\"},\"msdAbnormalDesc\":{\"type\":\"string\"},\"hvWireWear\":{\"type\":\"boolean\"},\"hvWireWearResult\":{\"type\":\"boolean\"},\"hvWireWearDesc\":{\"type\":\"string\"},\"lvWireWear\":{\"type\":\"boolean\"},\"lvWireWearResult\":{\"type\":\"boolean\"},\"lvWireWearDesc\":{\"type\":\"string\"},\"hvConnectorFasten\":{\"type\":\"boolean\"},\"hvConnectorFastenResult\":{\"type\":\"boolean\"},\"hvConnectorFastenDesc\":{\"type\":\"string\"},\"lvConnectorFasten\":{\"type\":\"boolean\"},\"lvConnectorFastenResult\":{\"type\":\"boolean\"},\"lvConnectorFastenDesc\":{\"type\":\"string\"},\"frontPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"nameplatePic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"meterPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"batteryPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["maintains/:maintainId/appearanceRecord"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "maintainId",
                  "type": "string",
                  "value": "{{maintainId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"appearanceSignAddress\": \"{{appearanceSignAddress}}\",\n  \"appearanceArrivalAt\": \"{{appearanceArrivalAt}}\",\n  \"appearanceRouteMap\": \"{{appearanceRouteMap}}\",\n  \"appearanceWorkers\": \"{{appearanceWorkers}}\",\n  \"meterAlarm\": \"{{meterAlarm}}\",\n  \"meterAlarmResult\": \"{{meterAlarmResult}}\",\n  \"meterAlarmDesc\": \"{{meterAlarmDesc}}\",\n  \"boxDamage\": \"{{boxDamage}}\",\n  \"boxDamageResult\": \"{{boxDamageResult}}\",\n  \"boxDamageDesc\": \"{{boxDamageDesc}}\",\n  \"electricLeakage\": \"{{electricLeakage}}\",\n  \"electricLeakageResult\": \"{{electricLeakageResult}}\",\n  \"electricLeakageDesc\": \"{{electricLeakageDesc}}\",\n  \"valveLoose\": \"{{valveLoose}}\",\n  \"valveLooseResult\": \"{{valveLooseResult}}\",\n  \"valveLooseDesc\": \"{{valveLooseDesc}}\",\n  \"coverAbnormal\": \"{{coverAbnormal}}\",\n  \"coverAbnormalResult\": \"{{coverAbnormalResult}}\",\n  \"coverAbnormalDesc\": \"{{coverAbnormalDesc}}\",\n  \"headLoose\": \"{{headLoose}}\",\n  \"headLooseResult\": \"{{headLooseResult}}\",\n  \"headLooseDesc\": \"{{headLooseDesc}}\",\n  \"boltLoose\": \"{{boltLoose}}\",\n  \"boltLooseResult\": \"{{boltLooseResult}}\",\n  \"boltLooseDesc\": \"{{boltLooseDesc}}\",\n  \"msdAbnormal\": \"{{msdAbnormal}}\",\n  \"msdAbnormalResult\": \"{{msdAbnormalResult}}\",\n  \"msdAbnormalDesc\": \"{{msdAbnormalDesc}}\",\n  \"hvWireWear\": \"{{hvWireWear}}\",\n  \"hvWireWearResult\": \"{{hvWireWearResult}}\",\n  \"hvWireWearDesc\": \"{{hvWireWearDesc}}\",\n  \"lvWireWear\": \"{{lvWireWear}}\",\n  \"lvWireWearResult\": \"{{lvWireWearResult}}\",\n  \"lvWireWearDesc\": \"{{lvWireWearDesc}}\",\n  \"hvConnectorFasten\": \"{{hvConnectorFasten}}\",\n  \"hvConnectorFastenResult\": \"{{hvConnectorFastenResult}}\",\n  \"hvConnectorFastenDesc\": \"{{hvConnectorFastenDesc}}\",\n  \"lvConnectorFasten\": \"{{lvConnectorFasten}}\",\n  \"lvConnectorFastenResult\": \"{{lvConnectorFastenResult}}\",\n  \"lvConnectorFastenDesc\": \"{{lvConnectorFastenDesc}}\",\n  \"frontPic\": \"{{frontPic}}\",\n  \"nameplatePic\": \"{{nameplatePic}}\",\n  \"meterPic\": \"{{meterPic}}\",\n  \"batteryPic\": \"{{batteryPic}}\"\n}"
            }
          },
          "name": "update maintain order appearance record",
          "description": "update maintain order appearance record"
        },
        {
          "id": "9253c460-e101-4989-959b-2629ca760e13",
          "response": [
            {
              "id": "1ecf3c86-f7c9-400d-87a4-b2def3b2cbc0",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["maintains/:maintainId/softwareRecord"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "maintainId",
                      "type": "string",
                      "value": "{{maintainId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"softwareSignAddress\": \"{{softwareSignAddress}}\",\n  \"softwareArrivalAt\": \"{{softwareArrivalAt}}\",\n  \"softwareRouteMap\": \"{{softwareRouteMap}}\",\n  \"softwareWorkers\": \"{{softwareWorkers}}\",\n  \"softwareStartPic\": \"{{softwareStartPic}}\",\n  \"softwareEndPic\": \"{{softwareEndPic}}\",\n  \"soh\": \"{{soh}}\",\n  \"sohResult\": \"{{sohResult}}\",\n  \"sohDesc\": \"{{sohDesc}}\",\n  \"current\": \"{{current}}\",\n  \"currentResult\": \"{{currentResult}}\",\n  \"currentDesc\": \"{{currentDesc}}\",\n  \"soc\": \"{{soc}}\",\n  \"socResult\": \"{{socResult}}\",\n  \"roc\": \"{{roc}}\",\n  \"rocResult\": \"{{rocResult}}\",\n  \"socDesc\": \"{{socDesc}}\",\n  \"addVoltage\": \"{{addVoltage}}\",\n  \"addVoltageResult\": \"{{addVoltageResult}}\",\n  \"totalVoltage\": \"{{totalVoltage}}\",\n  \"totalVoltageResult\": \"{{totalVoltageResult}}\",\n  \"addVoltageDesc\": \"{{addVoltageDesc}}\",\n  \"maxVoltage\": \"{{maxVoltage}}\",\n  \"maxVoltageResult\": \"{{maxVoltageResult}}\",\n  \"maxVoltageDesc\": \"{{maxVoltageDesc}}\",\n  \"minVoltage\": \"{{minVoltage}}\",\n  \"minVoltageResult\": \"{{minVoltageResult}}\",\n  \"minVoltageDesc\": \"{{minVoltageDesc}}\",\n  \"maxTemperature\": \"{{maxTemperature}}\",\n  \"maxTemperatureResult\": \"{{maxTemperatureResult}}\",\n  \"maxTemperatureDesc\": \"{{maxTemperatureDesc}}\",\n  \"minTemperature\": \"{{minTemperature}}\",\n  \"minTemperatureResult\": \"{{minTemperatureResult}}\",\n  \"minTemperatureDesc\": \"{{minTemperatureDesc}}\",\n  \"diffTemperature\": \"{{diffTemperature}}\",\n  \"diffTemperatureResult\": \"{{diffTemperatureResult}}\",\n  \"diffTemperatureDesc\": \"{{diffTemperatureDesc}}\",\n  \"batteryBalance\": \"{{batteryBalance}}\",\n  \"diffVoltage\": \"{{diffVoltage}}\",\n  \"diffVoltageResult\": \"{{diffVoltageResult}}\",\n  \"diffVoltageDesc\": \"{{diffVoltageDesc}}\",\n  \"chargePositive\": \"{{chargePositive}}\",\n  \"chargePositiveResult\": \"{{chargePositiveResult}}\",\n  \"chargeNegative\": \"{{chargeNegative}}\",\n  \"chargeNegativeResult\": \"{{chargeNegativeResult}}\",\n  \"chargePositiveDesc\": \"{{chargePositiveDesc}}\",\n  \"nochargePositive\": \"{{nochargePositive}}\",\n  \"nochargePositiveResult\": \"{{nochargePositiveResult}}\",\n  \"nochargeNegative\": \"{{nochargeNegative}}\",\n  \"nochargeNegativeResult\": \"{{nochargeNegativeResult}}\",\n  \"nochargePositiveDesc\": \"{{nochargePositiveDesc}}\"\n}"
                }
              },
              "code": 200,
              "status": "The maintain order"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2fbeca64-165e-428b-b380-b8c5819a6fe2",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"type\":\"object\",\"required\":[\"softwareSignAddress\",\"softwareArrivalAt\",\"softwareWorkers\",\"softwareStartPic\",\"softwareEndPic\",\"soh\",\"current\",\"soc\",\"roc\",\"addVoltage\",\"totalVoltage\",\"maxVoltage\",\"minVoltage\",\"maxTemperature\",\"minTemperature\",\"diffTemperature\",\"batteryBalance\",\"diffVoltage\",\"chargePositive\",\"chargeNegative\",\"nochargePositive\",\"nochargeNegative\"],\"properties\":{\"softwareSignAddress\":{\"type\":\"string\"},\"softwareArrivalAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"softwareRouteMap\":{\"type\":\"string\"},\"softwareWorkers\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"softwareStartPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"softwareEndPic\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"soh\":{\"type\":\"string\"},\"sohResult\":{\"type\":\"string\"},\"sohDesc\":{\"type\":\"string\"},\"current\":{\"type\":\"string\"},\"currentResult\":{\"type\":\"string\"},\"currentDesc\":{\"type\":\"string\"},\"soc\":{\"type\":\"string\"},\"socResult\":{\"type\":\"string\"},\"roc\":{\"type\":\"string\"},\"rocResult\":{\"type\":\"string\"},\"socDesc\":{\"type\":\"string\"},\"addVoltage\":{\"type\":\"string\"},\"addVoltageResult\":{\"type\":\"string\"},\"totalVoltage\":{\"type\":\"string\"},\"totalVoltageResult\":{\"type\":\"string\"},\"addVoltageDesc\":{\"type\":\"string\"},\"maxVoltage\":{\"type\":\"string\"},\"maxVoltageResult\":{\"type\":\"string\"},\"maxVoltageDesc\":{\"type\":\"string\"},\"minVoltage\":{\"type\":\"string\"},\"minVoltageResult\":{\"type\":\"string\"},\"minVoltageDesc\":{\"type\":\"string\"},\"maxTemperature\":{\"type\":\"string\"},\"maxTemperatureResult\":{\"type\":\"string\"},\"maxTemperatureDesc\":{\"type\":\"string\"},\"minTemperature\":{\"type\":\"string\"},\"minTemperatureResult\":{\"type\":\"string\"},\"minTemperatureDesc\":{\"type\":\"string\"},\"diffTemperature\":{\"type\":\"string\"},\"diffTemperatureResult\":{\"type\":\"string\"},\"diffTemperatureDesc\":{\"type\":\"string\"},\"batteryBalance\":{\"type\":\"string\",\"enum\":[\"LOW\",\"MIDDLE\",\"HIGH\"]},\"diffVoltage\":{\"type\":\"string\"},\"diffVoltageResult\":{\"type\":\"string\"},\"diffVoltageDesc\":{\"type\":\"string\"},\"chargePositive\":{\"type\":\"string\"},\"chargePositiveResult\":{\"type\":\"string\"},\"chargeNegative\":{\"type\":\"string\"},\"chargeNegativeResult\":{\"type\":\"string\"},\"chargePositiveDesc\":{\"type\":\"string\"},\"nochargePositive\":{\"type\":\"string\"},\"nochargePositiveResult\":{\"type\":\"string\"},\"nochargeNegative\":{\"type\":\"string\"},\"nochargeNegativeResult\":{\"type\":\"string\"},\"nochargePositiveDesc\":{\"type\":\"string\"}}}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["maintains/:maintainId/softwareRecord"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "maintainId",
                  "type": "string",
                  "value": "{{maintainId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"softwareSignAddress\": \"{{softwareSignAddress}}\",\n  \"softwareArrivalAt\": \"{{softwareArrivalAt}}\",\n  \"softwareRouteMap\": \"{{softwareRouteMap}}\",\n  \"softwareWorkers\": \"{{softwareWorkers}}\",\n  \"softwareStartPic\": \"{{softwareStartPic}}\",\n  \"softwareEndPic\": \"{{softwareEndPic}}\",\n  \"soh\": \"{{soh}}\",\n  \"sohResult\": \"{{sohResult}}\",\n  \"sohDesc\": \"{{sohDesc}}\",\n  \"current\": \"{{current}}\",\n  \"currentResult\": \"{{currentResult}}\",\n  \"currentDesc\": \"{{currentDesc}}\",\n  \"soc\": \"{{soc}}\",\n  \"socResult\": \"{{socResult}}\",\n  \"roc\": \"{{roc}}\",\n  \"rocResult\": \"{{rocResult}}\",\n  \"socDesc\": \"{{socDesc}}\",\n  \"addVoltage\": \"{{addVoltage}}\",\n  \"addVoltageResult\": \"{{addVoltageResult}}\",\n  \"totalVoltage\": \"{{totalVoltage}}\",\n  \"totalVoltageResult\": \"{{totalVoltageResult}}\",\n  \"addVoltageDesc\": \"{{addVoltageDesc}}\",\n  \"maxVoltage\": \"{{maxVoltage}}\",\n  \"maxVoltageResult\": \"{{maxVoltageResult}}\",\n  \"maxVoltageDesc\": \"{{maxVoltageDesc}}\",\n  \"minVoltage\": \"{{minVoltage}}\",\n  \"minVoltageResult\": \"{{minVoltageResult}}\",\n  \"minVoltageDesc\": \"{{minVoltageDesc}}\",\n  \"maxTemperature\": \"{{maxTemperature}}\",\n  \"maxTemperatureResult\": \"{{maxTemperatureResult}}\",\n  \"maxTemperatureDesc\": \"{{maxTemperatureDesc}}\",\n  \"minTemperature\": \"{{minTemperature}}\",\n  \"minTemperatureResult\": \"{{minTemperatureResult}}\",\n  \"minTemperatureDesc\": \"{{minTemperatureDesc}}\",\n  \"diffTemperature\": \"{{diffTemperature}}\",\n  \"diffTemperatureResult\": \"{{diffTemperatureResult}}\",\n  \"diffTemperatureDesc\": \"{{diffTemperatureDesc}}\",\n  \"batteryBalance\": \"{{batteryBalance}}\",\n  \"diffVoltage\": \"{{diffVoltage}}\",\n  \"diffVoltageResult\": \"{{diffVoltageResult}}\",\n  \"diffVoltageDesc\": \"{{diffVoltageDesc}}\",\n  \"chargePositive\": \"{{chargePositive}}\",\n  \"chargePositiveResult\": \"{{chargePositiveResult}}\",\n  \"chargeNegative\": \"{{chargeNegative}}\",\n  \"chargeNegativeResult\": \"{{chargeNegativeResult}}\",\n  \"chargePositiveDesc\": \"{{chargePositiveDesc}}\",\n  \"nochargePositive\": \"{{nochargePositive}}\",\n  \"nochargePositiveResult\": \"{{nochargePositiveResult}}\",\n  \"nochargeNegative\": \"{{nochargeNegative}}\",\n  \"nochargeNegativeResult\": \"{{nochargeNegativeResult}}\",\n  \"nochargePositiveDesc\": \"{{nochargePositiveDesc}}\"\n}"
            }
          },
          "name": "update maintain order software record",
          "description": "update maintain order software record"
        }
      ],
      "event": []
    },
    {
      "id": "712a69d2-9080-496f-b302-e5f9872f1ced",
      "name": "record",
      "item": [
        {
          "id": "66d15431-7059-4a94-a823-161e7ceea4dd",
          "response": [
            {
              "id": "e63378bd-a668-49c2-98ca-3f498c4a020a",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_201",
              "originalRequest": {
                "url": {
                  "path": ["records"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ticket\": \"{{ticket}}\",\n  \"title\": \"{{title}}\",\n  \"desc\": \"{{desc}}\"\n}"
                }
              },
              "code": 201,
              "status": "The repair order created"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "39ecb93e-8a6c-4cd5-bc4b-eca5a716c595",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 201\", function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"title\":{\"type\":\"string\"},\"desc\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["records"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ticket\": \"{{ticket}}\",\n  \"title\": \"{{title}}\",\n  \"desc\": \"{{desc}}\"\n}"
            }
          },
          "name": "Create a record",
          "description": "Create a record"
        },
        {
          "id": "fd51a6f2-ad00-4ff8-8d8d-ce1a0f7d6014",
          "response": [
            {
              "id": "803878d6-9226-4474-8978-9ed3e788d022",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                },
                {
                  "key": "X-Total-Count",
                  "value": "unset"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["records"],
                  "host": "{{baseUrl}}",
                  "query": [
                    {
                      "key": "_limit",
                      "value": ""
                    },
                    {
                      "key": "_offset",
                      "value": ""
                    },
                    {
                      "key": "_sort",
                      "value": ""
                    },
                    {
                      "key": "_select",
                      "value": ""
                    },
                    {
                      "key": "ticket_like",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 200,
              "status": "A paged array of repair orders"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7239ae06-0e51-4c71-8b6d-2414d2ad11d6",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"type\":\"array\",\"items\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"title\":{\"type\":\"string\"},\"desc\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}},\"headers\":{\"type\":\"object\",\"required\":[\"X-Total-Count\"],\"properties\":{\"X-Total-Count\":{\"type\":\"integer\"}}}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["records"],
              "host": "{{baseUrl}}",
              "query": [
                {
                  "key": "_limit",
                  "value": ""
                },
                {
                  "key": "_offset",
                  "value": ""
                },
                {
                  "key": "_sort",
                  "value": ""
                },
                {
                  "key": "_select",
                  "value": ""
                },
                {
                  "key": "ticket_like",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "List all records",
          "description": "List all records"
        },
        {
          "id": "a3e8bd6d-a4fd-4a68-944f-e4bafeedaf6a",
          "response": [
            {
              "id": "ec510000-5cca-483a-8fb6-365307474ca6",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["records/:recordId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "recordId",
                      "type": "string",
                      "value": "{{recordId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 200,
              "status": "Expected response to a valid request"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9fd17dcd-8066-42eb-a1ca-3c90d190f236",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"title\":{\"type\":\"string\"},\"desc\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["records/:recordId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "recordId",
                  "type": "string",
                  "value": "{{recordId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "Find record by id",
          "description": "Find record by id"
        },
        {
          "id": "62cb82f4-14c5-4645-a441-855c5b38b8a8",
          "response": [
            {
              "id": "777e8475-9f82-4448-a2b8-fce2a80a7b9b",
              "header": [
                {
                  "key": "Content-type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "name": "Response_200",
              "originalRequest": {
                "url": {
                  "path": ["records/:recordId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "recordId",
                      "type": "string",
                      "value": "{{recordId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ticket\": \"{{ticket}}\",\n  \"title\": \"{{title}}\",\n  \"desc\": \"{{desc}}\"\n}"
                }
              },
              "code": 200,
              "status": "The record"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "281ce65f-c978-430c-8f10-66a5e4e077a4",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {\"type\":\"object\",\"required\":[],\"properties\":{\"content\":{\"allOf\":[{\"type\":\"object\",\"properties\":{\"ticket\":{\"type\":\"string\"},\"title\":{\"type\":\"string\"},\"desc\":{\"type\":\"string\"}}},{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\"},\"updateAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"updateBy\":{\"type\":\"string\"},\"createAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"createBy\":{\"type\":\"string\"}}}]}}};",
                  "const res = {",
                  "  content: pm.response.json(),",
                  "  headers: pm.response.headers.reduce((c, k) => ({...c, [k.key]: k.value }), {})",
                  "}",
                  "pm.test(\"Json body schema test\", function(){",
                  "  pm.expect(ajv.validate(schema, res)).to.be.true;",
                  "})",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["records/:recordId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "recordId",
                  "type": "string",
                  "value": "{{recordId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ticket\": \"{{ticket}}\",\n  \"title\": \"{{title}}\",\n  \"desc\": \"{{desc}}\"\n}"
            }
          },
          "name": "Update record",
          "description": "Update record"
        },
        {
          "id": "5eae7c8a-6df9-40dc-9a13-33ea951071a7",
          "response": [
            {
              "id": "069dcca8-7811-4eef-aaeb-8ea3eca91eee",
              "header": [],
              "cookie": [],
              "name": "Response_204",
              "originalRequest": {
                "url": {
                  "path": ["records/:recordId"],
                  "host": "{{baseUrl}}",
                  "query": [],
                  "variable": [
                    {
                      "id": "recordId",
                      "type": "string",
                      "value": "{{recordId}}"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "code": 204,
              "status": "record deleted"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8b647d0d-342f-41d5-af09-3673db79118a",
                "type": "text/javascript",
                "exec": [
                  "var Ajv = require('ajv');",
                  "var ajv = new Ajv({ logger: console, coerceTypes: true, unknownFormats: [\"int32\"] });",
                  "",
                  "pm.test(\"Status code is 204\", function () {",
                  "  pm.response.to.have.status(204);",
                  "});",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "path": ["records/:recordId"],
              "host": "{{baseUrl}}",
              "query": [],
              "variable": [
                {
                  "id": "recordId",
                  "type": "string",
                  "value": "{{recordId}}"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{token}}",
                  "key": "token"
                }
              ]
            }
          },
          "name": "deleteRecord",
          "description": "deleteRecord"
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "key": "name"
    },
    {
      "key": "address"
    },
    {
      "key": "appearance"
    },
    {
      "key": "software"
    },
    {
      "key": "resource"
    },
    {
      "key": "type"
    },
    {
      "key": "content"
    },
    {
      "key": "terminal"
    },
    {
      "key": "park"
    },
    {
      "key": "purchaseAt"
    },
    {
      "key": "plateAt"
    },
    {
      "key": "operateAt"
    },
    {
      "key": "retireAt"
    },
    {
      "key": "license"
    },
    {
      "key": "brands"
    },
    {
      "key": "plate"
    },
    {
      "key": "vin"
    },
    {
      "key": "jobNum"
    },
    {
      "key": "num"
    },
    {
      "key": "catl"
    },
    {
      "key": "batteryPN"
    },
    {
      "key": "batteryNum"
    },
    {
      "key": "batteryPropRight"
    },
    {
      "key": "power"
    },
    {
      "key": "bmuHardware"
    },
    {
      "key": "bmuSoftware"
    },
    {
      "key": "cscHardware"
    },
    {
      "key": "cscSoftware"
    },
    {
      "key": "rdb"
    },
    {
      "key": "remark"
    },
    {
      "key": "softwarePic"
    },
    {
      "key": "frontPic"
    },
    {
      "key": "nameplatePic"
    },
    {
      "key": "meterPic"
    },
    {
      "key": "batteryPic"
    },
    {
      "key": "otherPic"
    },
    {
      "key": "ticket"
    },
    {
      "key": "status"
    },
    {
      "key": "rejected"
    },
    {
      "key": "scrapped"
    },
    {
      "key": "crm"
    },
    {
      "key": "maintain"
    },
    {
      "key": "vehicle"
    },
    {
      "key": "reporter"
    },
    {
      "key": "reporterPhone"
    },
    {
      "key": "problem"
    },
    {
      "key": "assignee"
    },
    {
      "key": "assignAt"
    },
    {
      "key": "closeAt"
    },
    {
      "key": "record"
    },
    {
      "key": "pauseReason"
    },
    {
      "key": "signAddress"
    },
    {
      "key": "arrivalAt"
    },
    {
      "key": "mileages"
    },
    {
      "key": "routeMap"
    },
    {
      "key": "faultCell"
    },
    {
      "key": "workHours"
    },
    {
      "key": "failReason"
    },
    {
      "key": "processMethod"
    },
    {
      "key": "faultAttr"
    },
    {
      "key": "faultMode"
    },
    {
      "key": "backups"
    },
    {
      "key": "livePic"
    },
    {
      "key": "resultDesc"
    },
    {
      "key": "dataFile"
    },
    {
      "key": "otherCost"
    },
    {
      "key": "workers"
    },
    {
      "key": "appearanceRecord"
    },
    {
      "key": "softwareRecord"
    },
    {
      "key": "repair"
    },
    {
      "key": "appearanceSignAddress"
    },
    {
      "key": "appearanceArrivalAt"
    },
    {
      "key": "appearanceRouteMap"
    },
    {
      "key": "appearanceWorkers"
    },
    {
      "key": "meterAlarm"
    },
    {
      "key": "meterAlarmResult"
    },
    {
      "key": "meterAlarmDesc"
    },
    {
      "key": "boxDamage"
    },
    {
      "key": "boxDamageResult"
    },
    {
      "key": "boxDamageDesc"
    },
    {
      "key": "electricLeakage"
    },
    {
      "key": "electricLeakageResult"
    },
    {
      "key": "electricLeakageDesc"
    },
    {
      "key": "valveLoose"
    },
    {
      "key": "valveLooseResult"
    },
    {
      "key": "valveLooseDesc"
    },
    {
      "key": "coverAbnormal"
    },
    {
      "key": "coverAbnormalResult"
    },
    {
      "key": "coverAbnormalDesc"
    },
    {
      "key": "headLoose"
    },
    {
      "key": "headLooseResult"
    },
    {
      "key": "headLooseDesc"
    },
    {
      "key": "boltLoose"
    },
    {
      "key": "boltLooseResult"
    },
    {
      "key": "boltLooseDesc"
    },
    {
      "key": "msdAbnormal"
    },
    {
      "key": "msdAbnormalResult"
    },
    {
      "key": "msdAbnormalDesc"
    },
    {
      "key": "hvWireWear"
    },
    {
      "key": "hvWireWearResult"
    },
    {
      "key": "hvWireWearDesc"
    },
    {
      "key": "lvWireWear"
    },
    {
      "key": "lvWireWearResult"
    },
    {
      "key": "lvWireWearDesc"
    },
    {
      "key": "hvConnectorFasten"
    },
    {
      "key": "hvConnectorFastenResult"
    },
    {
      "key": "hvConnectorFastenDesc"
    },
    {
      "key": "lvConnectorFasten"
    },
    {
      "key": "lvConnectorFastenResult"
    },
    {
      "key": "lvConnectorFastenDesc"
    },
    {
      "key": "softwareSignAddress"
    },
    {
      "key": "softwareArrivalAt"
    },
    {
      "key": "softwareRouteMap"
    },
    {
      "key": "softwareWorkers"
    },
    {
      "key": "softwareStartPic"
    },
    {
      "key": "softwareEndPic"
    },
    {
      "key": "soh"
    },
    {
      "key": "sohResult"
    },
    {
      "key": "sohDesc"
    },
    {
      "key": "current"
    },
    {
      "key": "currentResult"
    },
    {
      "key": "currentDesc"
    },
    {
      "key": "soc"
    },
    {
      "key": "socResult"
    },
    {
      "key": "roc"
    },
    {
      "key": "rocResult"
    },
    {
      "key": "socDesc"
    },
    {
      "key": "addVoltage"
    },
    {
      "key": "addVoltageResult"
    },
    {
      "key": "totalVoltage"
    },
    {
      "key": "totalVoltageResult"
    },
    {
      "key": "addVoltageDesc"
    },
    {
      "key": "maxVoltage"
    },
    {
      "key": "maxVoltageResult"
    },
    {
      "key": "maxVoltageDesc"
    },
    {
      "key": "minVoltage"
    },
    {
      "key": "minVoltageResult"
    },
    {
      "key": "minVoltageDesc"
    },
    {
      "key": "maxTemperature"
    },
    {
      "key": "maxTemperatureResult"
    },
    {
      "key": "maxTemperatureDesc"
    },
    {
      "key": "minTemperature"
    },
    {
      "key": "minTemperatureResult"
    },
    {
      "key": "minTemperatureDesc"
    },
    {
      "key": "diffTemperature"
    },
    {
      "key": "diffTemperatureResult"
    },
    {
      "key": "diffTemperatureDesc"
    },
    {
      "key": "batteryBalance"
    },
    {
      "key": "diffVoltage"
    },
    {
      "key": "diffVoltageResult"
    },
    {
      "key": "diffVoltageDesc"
    },
    {
      "key": "chargePositive"
    },
    {
      "key": "chargePositiveResult"
    },
    {
      "key": "chargeNegative"
    },
    {
      "key": "chargeNegativeResult"
    },
    {
      "key": "chargePositiveDesc"
    },
    {
      "key": "nochargePositive"
    },
    {
      "key": "nochargePositiveResult"
    },
    {
      "key": "nochargeNegative"
    },
    {
      "key": "nochargeNegativeResult"
    },
    {
      "key": "nochargePositiveDesc"
    },
    {
      "key": "title"
    },
    {
      "key": "desc"
    }
  ],
  "info": {
    "_postman_id": "7805b2ac-e252-4935-b6d1-80f2b4bd24cf",
    "name": "youyuan core Service",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  }
}
